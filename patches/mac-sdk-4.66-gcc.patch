diff -Naur mac-sdk-4.66/Makefile mac-sdk-4.66-gcc/Makefile
--- mac-sdk-4.66/Makefile	1970-01-01 00:00:00 +0000
+++ mac-sdk-4.66-gcc/Makefile	2019-04-20 10:32:45 +0000
@@ -0,0 +1,103 @@
+# Find system
+UNAME	 = $(shell uname)
+
+VERSION	  = 4
+
+CXXOPTS	  = -I Shared -I Source/Shared -I Source/MACLib -c
+LDOPTS	  = -lstdc++
+
+DLLLDOPTS = -shared
+CMDLDOPTS = 
+
+ifneq ($(findstring MINGW,$(UNAME)),)
+	SHAREDEXT  = dll
+
+	DLLNAME	   = Source/MACDll.$(SHAREDEXT)
+	LIBNAME	   = Source/libMAC.a
+	CMDNAME	   = Source/MAC.exe
+
+	CXXOPTS	  += -D PLATFORM_WINDOWS
+
+	DLLLDOPTS += -Wl,--kill-at,--out-implib,$(LIBNAME)
+	CMDLDOPTS += -municode -mconsole -Wl,--enable-stdcall-fixup
+else
+	SHAREDEXT  = so
+
+	DLLNAME	   = libMAC.$(SHAREDEXT).$(VERSION)
+	CMDNAME	   = mac
+
+	CXXOPTS	  += -fPIC
+
+#	Use the .dylib extension for shared objects on macOS.
+	ifeq ($(UNAME),Darwin)
+		SHAREDEXT = dylib
+
+		DLLNAME	  = libMAC.$(VERSION).$(SHAREDEXT)
+	endif
+
+#	Set folders if not provided.
+	ifndef prefix
+		prefix = /usr/local
+	endif
+
+	ifndef bindir
+		bindir = $(prefix)/bin
+	endif
+
+	ifndef libdir
+		libdir = $(prefix)/lib
+	endif
+
+	ifndef includedir
+		includedir = $(prefix)/include
+	endif
+
+#	Define PLATFORM_LINUX on all non-Apple platforms.
+	ifeq ($(UNAME),Darwin)
+		CXXOPTS += -D PLATFORM_APPLE
+	else
+		CXXOPTS += -D PLATFORM_LINUX
+	endif
+endif
+
+SHAREDOBJECTS = Source/Shared/CharacterHelper.o Source/Shared/CircleBuffer.o Source/Shared/CRC.o Source/Shared/GlobalFunctions.o Source/Shared/StdLibFileIO.o Source/Shared/WinFileIO.o
+LIBOBJECTS    = Source/MACLib/APECompress.o Source/MACLib/APECompressCore.o Source/MACLib/APECompressCreate.o Source/MACLib/APEDecompress.o Source/MACLib/APEHeader.o Source/MACLib/APEInfo.o Source/MACLib/APELink.o Source/MACLib/APESimple.o Source/MACLib/APETag.o Source/MACLib/BitArray.o Source/MACLib/MACLib.o Source/MACLib/MACProgressHelper.o Source/MACLib/MD5.o Source/MACLib/NewPredictor.o Source/MACLib/NNFilter.o Source/MACLib/Prepare.o Source/MACLib/UnBitArray.o Source/MACLib/UnBitArrayBase.o Source/MACLib/WAVInputSource.o Source/MACLib/Old/Anti-Predictor.o Source/MACLib/Old/AntiPredictorExtraHigh.o Source/MACLib/Old/AntiPredictorFast.o Source/MACLib/Old/AntiPredictorHigh.o Source/MACLib/Old/AntiPredictorNormal.o Source/MACLib/Old/APEDecompressCore.o Source/MACLib/Old/APEDecompressOld.o Source/MACLib/Old/UnBitArrayOld.o Source/MACLib/Old/UnMAC.o
+DLLOBJECTS    = Source/MACDll/MACDll.o
+CMDOBJECTS    = Source/Console/Console.o
+
+all: $(DLLNAME) $(CMDNAME)
+
+clean:
+	rm -f $(DLLNAME) $(LIBNAME) $(SHAREDOBJECTS) $(LIBOBJECTS) $(DLLOBJECTS) $(CMDNAME) $(CMDOBJECTS)
+
+install:
+	mkdir -p $(DESTDIR)$(bindir)
+	cp $(CMDNAME) $(DESTDIR)$(bindir)
+
+	mkdir -p $(DESTDIR)$(libdir)
+	cp $(DLLNAME) $(DESTDIR)$(libdir)
+	ln -sf $(DLLNAME) $(DESTDIR)$(libdir)/libMAC.$(SHAREDEXT)
+
+	mkdir -p $(DESTDIR)$(includedir)/MAC
+	cp Shared/*.h $(DESTDIR)$(includedir)/MAC
+
+$(DLLNAME): $(SHAREDOBJECTS) $(LIBOBJECTS) $(DLLOBJECTS)
+	$(CC) $(SHAREDOBJECTS) $(LIBOBJECTS) $(DLLOBJECTS) $(LDOPTS) $(LDFLAGS) $(DLLLDOPTS) -o $@
+
+$(CMDNAME): $(DLLNAME) $(CMDOBJECTS)
+	$(CC) $(SHAREDOBJECTS) $(CMDOBJECTS) $(DLLNAME) $(LDOPTS) $(LDFLAGS) $(CMDLDOPTS) -o $@
+
+Source/Shared/%.o: Source/Shared/%.cpp
+	$(CXX) $(CXXOPTS) $(CXXFLAGS) $< -o $@
+
+Source/MACLib/%.o: Source/MACLib/%.cpp
+	$(CXX) $(CXXOPTS) $(CXXFLAGS) $< -o $@
+
+Source/MACLib/Old/%.o: Source/MACLib/Old/%.cpp
+	$(CXX) $(CXXOPTS) $(CXXFLAGS) $< -o $@
+
+Source/MACDll/%.o: Source/MACDll/%.cpp
+	$(CXX) $(CXXOPTS) $(CXXFLAGS) $< -o $@
+
+Source/Console/%.o: Source/Console/%.cpp
+	$(CXX) $(CXXOPTS) $(CXXFLAGS) $< -o $@
diff -Naur mac-sdk-4.66/Shared/All.h mac-sdk-4.66-gcc/Shared/All.h
--- mac-sdk-4.66/Shared/All.h	2019-04-18 21:42:56 +0000
+++ mac-sdk-4.66-gcc/Shared/All.h	2019-04-20 10:31:47 +0000
@@ -85,44 +85,17 @@
 #define ENABLE_COMPRESSION_MODE_HIGH
 #define ENABLE_COMPRESSION_MODE_EXTRA_HIGH
 
-// 64 bit platform
-#ifdef PLATFORM_64BIT
-	#define PLATFORM_x64
-#endif
-
-#if __x86_64__ || __aarch64__
-    #define PLATFORM_x64
-#endif
-
 /*****************************************************************************************
 Global types
 *****************************************************************************************/
 namespace APE
 {
 	// integer types
-#if defined(PLATFORM_x64)
-    typedef	int64_t                                     int64; // native integer, can safely hold a pointer
-    typedef int32_t                                     int32;
-#else
-	typedef	intptr_t                                    int32; // native integer, can safely hold a pointer
-    typedef int64_t                                     int64;
-#endif
-    //typedef intptr_t                                  intn;
-	//typedef uintptr_t                                 uintn;
+	typedef int32_t                                     int32;
+	typedef int64_t                                     int64;
 
-#if defined(PLATFORM_x64)
-// DO NOT CHANGE THE FOLLOWING 6 LINES! They are necessary for building Media Center 64 bit on non-windows platforms!
-    #ifndef PLATFORM_WINDOWS
-    	typedef long long intn;
-    	typedef unsigned long long uintn;
-    #else
-    	typedef int64_t intn;
-    	typedef uint64_t uintn;
-    #endif    
-#else
-    typedef int32_t intn;
-    typedef uint32_t uintn;
-#endif
+	typedef intptr_t                                    intn; // native integer, can safely hold a pointer
+	typedef uintptr_t                                   uintn;
 
 	typedef uint64_t                                    uint64;
 	typedef uint32_t                                    uint32;
@@ -174,9 +147,13 @@
     #define TICK_COUNT_READ(VARIABLE)                   { struct timeval t; gettimeofday(&t, NULL); VARIABLE = t.tv_sec * 1000000LLU + t.tv_usec; }
     #define TICK_COUNT_FREQ                             1000000
     #define ASSERT(e)
-    #define wcsncpy_s(A, B, COUNT) wcscpy(A, B)
+#endif
+
+#if !defined(PLATFORM_WINDOWS) || !defined(_MSC_VER)
+    #define wcsncpy_s(A, B, COUNT) wcsncpy(A, B, COUNT)
     #define wcscpy_s(A, B, C) wcscpy(A, C)
-    #define sprintf_s(A, B, C, D) sprintf(A, C, D)
+    #define sprintf_s(A, B, C, ...) sprintf(A, C, __VA_ARGS__)
+    #define _stprintf_s(A, B, C, ...) _stprintf(A, C, __VA_ARGS__)
     #define strcpy_s(A, B, C) strcpy(A, C)
     #define _tcscat_s(A, B, C) _tcscat(A, C)
 #endif
diff -Naur mac-sdk-4.66/Shared/MACDll.h mac-sdk-4.66-gcc/Shared/MACDll.h
--- mac-sdk-4.66/Shared/MACDll.h	2019-03-02 19:31:09 +0000
+++ mac-sdk-4.66-gcc/Shared/MACDll.h	2019-04-13 17:50:31 +0000
@@ -64,9 +64,9 @@
 {
     DLLEXPORT APE_COMPRESS_HANDLE __stdcall c_APECompress_Create(int * pErrorCode = NULL);
     DLLEXPORT void __stdcall c_APECompress_Destroy(APE_COMPRESS_HANDLE hAPECompress);
-    DLLEXPORT int __stdcall c_APECompress_Start(APE_COMPRESS_HANDLE hAPECompress, const char * pOutputFilename, const APE::WAVEFORMATEX * pwfeInput, int64 nMaxAudioBytes = MAX_AUDIO_BYTES_UNKNOWN, int nCompressionLevel = COMPRESSION_LEVEL_NORMAL, const void * pHeaderData = NULL, int nHeaderBytes = CREATE_WAV_HEADER_ON_DECOMPRESSION);
-    DLLEXPORT int __stdcall c_APECompress_StartW(APE_COMPRESS_HANDLE hAPECompress, const APE::str_utfn * pOutputFilename, const APE::WAVEFORMATEX * pwfeInput, int64 nMaxAudioBytes = MAX_AUDIO_BYTES_UNKNOWN, int nCompressionLevel = COMPRESSION_LEVEL_NORMAL, const void * pHeaderData = NULL, int nHeaderBytes = CREATE_WAV_HEADER_ON_DECOMPRESSION);
-    DLLEXPORT int64 __stdcall c_APECompress_AddData(APE_COMPRESS_HANDLE hAPECompress, unsigned char * pData, int nBytes);
+    DLLEXPORT int __stdcall c_APECompress_Start(APE_COMPRESS_HANDLE hAPECompress, const char * pOutputFilename, const APE::WAVEFORMATEX * pwfeInput, APE::int64 nMaxAudioBytes = MAX_AUDIO_BYTES_UNKNOWN, int nCompressionLevel = COMPRESSION_LEVEL_NORMAL, const void * pHeaderData = NULL, int nHeaderBytes = CREATE_WAV_HEADER_ON_DECOMPRESSION);
+    DLLEXPORT int __stdcall c_APECompress_StartW(APE_COMPRESS_HANDLE hAPECompress, const APE::str_utfn * pOutputFilename, const APE::WAVEFORMATEX * pwfeInput, APE::int64 nMaxAudioBytes = MAX_AUDIO_BYTES_UNKNOWN, int nCompressionLevel = COMPRESSION_LEVEL_NORMAL, const void * pHeaderData = NULL, int nHeaderBytes = CREATE_WAV_HEADER_ON_DECOMPRESSION);
+    DLLEXPORT APE::int64 __stdcall c_APECompress_AddData(APE_COMPRESS_HANDLE hAPECompress, unsigned char * pData, int nBytes);
     DLLEXPORT int __stdcall c_APECompress_GetBufferBytesAvailable(APE_COMPRESS_HANDLE hAPECompress);
     DLLEXPORT unsigned char * __stdcall c_APECompress_LockBuffer(APE_COMPRESS_HANDLE hAPECompress, APE::int64 * pBytesAvailable);
     DLLEXPORT int __stdcall c_APECompress_UnlockBuffer(APE_COMPRESS_HANDLE hAPECompress, int nBytesAdded, BOOL bProcess = true);
diff -Naur mac-sdk-4.66/Source/Console/Console.cpp mac-sdk-4.66-gcc/Source/Console/Console.cpp
--- mac-sdk-4.66/Source/Console/Console.cpp	2019-03-02 19:31:09 +0000
+++ mac-sdk-4.66-gcc/Source/Console/Console.cpp	2019-04-13 17:51:32 +0000
@@ -21,7 +21,12 @@
 #define UNDEFINED_MODE		-1
 
 // use 8 bit character functions on non-Windows platforms
-#ifndef PLATFORM_WINDOWS
+#ifdef PLATFORM_WINDOWS
+	#ifndef _MSC_VER
+		#define _tcscpy_s(dst, num, src) wcscpy(dst, src)
+		#define _tcsncpy_s(dst, num, src, count) wcsncpy(dst, src, count)
+	#endif
+#else
 	#define _tmain(argc, argv) main(argc, argv)
 	#define _tcscpy_s(dst, num, src) strcpy(dst, src)
 	#define _tcsncpy_s(dst, num, src, count) strncpy(dst, src, count)
diff -Naur mac-sdk-4.66/Source/MACDll/MACDll.h mac-sdk-4.66-gcc/Source/MACDll/MACDll.h
--- mac-sdk-4.66/Source/MACDll/MACDll.h	2019-03-02 19:31:09 +0000
+++ mac-sdk-4.66-gcc/Source/MACDll/MACDll.h	1970-01-01 00:00:00 +0000
@@ -1,97 +0,0 @@
-/*****************************************************************************************
-Monkey's Audio MACDll.h (include for using MACDll.dll in your projects)
-Copyright (C) 2000-2011 by Matthew T. Ashland   All Rights Reserved.
-
-Overview:
-
-Basically all this dll does is wrap MACLib.lib, so browse through MACLib.h for documentation
-on how to use the interfaces.
-*****************************************************************************************/
-
-#pragma once
-
-/*****************************************************************************************
-Includes
-*****************************************************************************************/
-#include "All.h"
-#include "MACLib.h"
-
-/*****************************************************************************************
-Defines (implemented elsewhere)
-*****************************************************************************************/
-namespace APE
-{
-	struct ID3_TAG;
-}
-
-/*****************************************************************************************
-Helper functions
-*****************************************************************************************/
-extern "C"
-{
-    DLLEXPORT int __stdcall GetVersionNumber();
-#ifdef PLATFORM_WINDOWS
-    DLLEXPORT int __stdcall GetInterfaceCompatibility(int nVersion, BOOL bDisplayWarningsOnFailure = TRUE, HWND hwndParent = NULL);
-    DLLEXPORT int __stdcall ShowFileInfoDialog(const APE::str_ansi * pFilename, HWND hwndWindow);
-#endif
-    DLLEXPORT int __stdcall TagFileSimple(const APE::str_ansi * pFilename, const char * pArtist, const char * pAlbum, const char * pTitle, const char * pComment, const char * pGenre, const char * pYear, const char * pTrack, BOOL bClearFirst, BOOL bUseOldID3);
-	DLLEXPORT int __stdcall GetID3Tag(const APE::str_ansi * pFilename, APE::ID3_TAG * pID3Tag);
-    DLLEXPORT int __stdcall RemoveTag(const APE::str_ansi * pFilename);
-}
-
-typedef int (__stdcall * proc_GetVersionNumber)();
-#ifdef PLATFORM_WINDOWS
-typedef int (__stdcall * proc_GetInterfaceCompatibility)(int, BOOL, HWND);
-#endif
-
-/*****************************************************************************************
-IAPECompress wrapper(s)
-*****************************************************************************************/
-typedef void * APE_COMPRESS_HANDLE;
-
-typedef APE_COMPRESS_HANDLE (__stdcall * proc_APECompress_Create)(int *); 
-typedef void (__stdcall * proc_APECompress_Destroy)(APE_COMPRESS_HANDLE); 
-typedef int (__stdcall * proc_APECompress_Start)(APE_COMPRESS_HANDLE, const char *, const APE::WAVEFORMATEX *, int, int, const void *, int);
-typedef int (__stdcall * proc_APECompress_StartW)(APE_COMPRESS_HANDLE, const APE::str_utfn *, const APE::WAVEFORMATEX *, int, int, const void *, int);
-typedef int (__stdcall * proc_APECompress_AddData)(APE_COMPRESS_HANDLE, unsigned char *, int);
-typedef int (__stdcall * proc_APECompress_GetBufferBytesAvailable)(APE_COMPRESS_HANDLE);
-typedef unsigned char * (__stdcall * proc_APECompress_LockBuffer)(APE_COMPRESS_HANDLE, APE::int64 *);
-typedef int (__stdcall * proc_APECompress_UnlockBuffer)(APE_COMPRESS_HANDLE, int, BOOL);
-typedef int (__stdcall * proc_APECompress_Finish)(APE_COMPRESS_HANDLE, unsigned char *, int, int);
-typedef int (__stdcall * proc_APECompress_Kill)(APE_COMPRESS_HANDLE);
-
-extern "C"
-{
-    DLLEXPORT APE_COMPRESS_HANDLE __stdcall c_APECompress_Create(int * pErrorCode = NULL);
-    DLLEXPORT void __stdcall c_APECompress_Destroy(APE_COMPRESS_HANDLE hAPECompress);
-    DLLEXPORT int __stdcall c_APECompress_Start(APE_COMPRESS_HANDLE hAPECompress, const char * pOutputFilename, const APE::WAVEFORMATEX * pwfeInput, int64 nMaxAudioBytes = MAX_AUDIO_BYTES_UNKNOWN, int nCompressionLevel = COMPRESSION_LEVEL_NORMAL, const void * pHeaderData = NULL, int nHeaderBytes = CREATE_WAV_HEADER_ON_DECOMPRESSION);
-    DLLEXPORT int __stdcall c_APECompress_StartW(APE_COMPRESS_HANDLE hAPECompress, const APE::str_utfn * pOutputFilename, const APE::WAVEFORMATEX * pwfeInput, int64 nMaxAudioBytes = MAX_AUDIO_BYTES_UNKNOWN, int nCompressionLevel = COMPRESSION_LEVEL_NORMAL, const void * pHeaderData = NULL, int nHeaderBytes = CREATE_WAV_HEADER_ON_DECOMPRESSION);
-    DLLEXPORT int64 __stdcall c_APECompress_AddData(APE_COMPRESS_HANDLE hAPECompress, unsigned char * pData, int nBytes);
-    DLLEXPORT int __stdcall c_APECompress_GetBufferBytesAvailable(APE_COMPRESS_HANDLE hAPECompress);
-    DLLEXPORT unsigned char * __stdcall c_APECompress_LockBuffer(APE_COMPRESS_HANDLE hAPECompress, APE::int64 * pBytesAvailable);
-    DLLEXPORT int __stdcall c_APECompress_UnlockBuffer(APE_COMPRESS_HANDLE hAPECompress, int nBytesAdded, BOOL bProcess = true);
-    DLLEXPORT int __stdcall c_APECompress_Finish(APE_COMPRESS_HANDLE hAPECompress, unsigned char * pTerminatingData, int nTerminatingBytes, int nWAVTerminatingBytes);
-    DLLEXPORT int __stdcall c_APECompress_Kill(APE_COMPRESS_HANDLE hAPECompress);
-}
-
-/*****************************************************************************************
-IAPEDecompress wrapper(s)
-*****************************************************************************************/
-typedef void * APE_DECOMPRESS_HANDLE;
-
-typedef APE_DECOMPRESS_HANDLE (__stdcall * proc_APEDecompress_Create)(const char *, int *); 
-typedef APE_DECOMPRESS_HANDLE (__stdcall * proc_APEDecompress_CreateW)(const char *, int *); 
-typedef void (__stdcall * proc_APEDecompress_Destroy)(APE_DECOMPRESS_HANDLE); 
-typedef int (__stdcall * proc_APEDecompress_GetData)(APE_DECOMPRESS_HANDLE, char *, APE::intn, APE::intn *);
-typedef int (__stdcall * proc_APEDecompress_Seek)(APE_DECOMPRESS_HANDLE, int); 
-typedef int (__stdcall * proc_APEDecompress_GetInfo)(APE_DECOMPRESS_HANDLE, APE::APE_DECOMPRESS_FIELDS, int, int);
-
-extern "C"
-{
-    DLLEXPORT APE_DECOMPRESS_HANDLE __stdcall c_APEDecompress_Create(const APE::str_ansi * pFilename, int * pErrorCode = NULL);
-    DLLEXPORT APE_DECOMPRESS_HANDLE __stdcall c_APEDecompress_CreateW(const APE::str_utfn * pFilename, int * pErrorCode = NULL);
-    DLLEXPORT void __stdcall c_APEDecompress_Destroy(APE_DECOMPRESS_HANDLE hAPEDecompress);
-    DLLEXPORT int __stdcall c_APEDecompress_GetData(APE_DECOMPRESS_HANDLE hAPEDecompress, char * pBuffer, APE::intn nBlocks, APE::intn * pBlocksRetrieved);
-    DLLEXPORT int __stdcall c_APEDecompress_Seek(APE_DECOMPRESS_HANDLE hAPEDecompress, int nBlockOffset);
-    DLLEXPORT int __stdcall c_APEDecompress_GetInfo(APE_DECOMPRESS_HANDLE hAPEDecompress, APE::APE_DECOMPRESS_FIELDS Field, int nParam1 = 0, int nParam2 = 0);
-}
diff -Naur mac-sdk-4.66/Source/MACLib/APETag.h mac-sdk-4.66-gcc/Source/MACLib/APETag.h
--- mac-sdk-4.66/Source/MACLib/APETag.h	2019-04-15 21:00:59 +0000
+++ mac-sdk-4.66-gcc/Source/MACLib/APETag.h	1970-01-01 00:00:00 +0000
@@ -1,298 +0,0 @@
-#pragma once
-
-namespace APE
-{
-
-class CIO;
-
-/*****************************************************************************************
-APETag version history / supported formats
-
-1.0 (1000) - Original APE tag spec.  Fully supported by this code.
-2.0 (2000) - Refined APE tag spec (better streaming support, UTF encoding). Fully supported by this code.
-
-Notes:
-    - also supports reading of ID3v1.1 tags
-    - all saving done in the APE Tag format using CURRENT_APE_TAG_VERSION
-*****************************************************************************************/
-
-/*****************************************************************************************
-APETag layout
-
-1) Header - APE_TAG_FOOTER (optional) (32 bytes)
-2) Fields (array):
-        Value Size (4 bytes)
-        Flags (4 bytes)
-        Field Name (? ANSI bytes -- requires NULL terminator -- in range of 0x20 (space) to 0x7E (tilde))
-        Value ([Value Size] bytes)
-3) Footer - APE_TAG_FOOTER (32 bytes)    
-*****************************************************************************************/
-
-/*****************************************************************************************
-Notes
-
-When saving images, store the filename (no directory -- i.e. Cover.jpg) in UTF-8 followed 
-by a null terminator, followed by the image data.
-
-What saving text lists, delimit the values with a NULL terminator.
-*****************************************************************************************/
-
-/*****************************************************************************************
-The version of the APE tag
-*****************************************************************************************/
-#define CURRENT_APE_TAG_VERSION                 2000
-
-/*****************************************************************************************
-"Standard" APE tag fields
-*****************************************************************************************/
-#define APE_TAG_FIELD_TITLE                     L"Title"
-#define APE_TAG_FIELD_ARTIST                    L"Artist"
-#define APE_TAG_FIELD_ALBUM                     L"Album"
-#define APE_TAG_FIELD_COMMENT                   L"Comment"
-#define APE_TAG_FIELD_YEAR                      L"Year"
-#define APE_TAG_FIELD_TRACK                     L"Track"
-#define APE_TAG_FIELD_GENRE                     L"Genre"
-#define APE_TAG_FIELD_COVER_ART_FRONT           L"Cover Art (front)"
-#define APE_TAG_FIELD_NOTES                     L"Notes"
-#define APE_TAG_FIELD_LYRICS                    L"Lyrics"
-#define APE_TAG_FIELD_COPYRIGHT                 L"Copyright"
-#define APE_TAG_FIELD_BUY_URL                   L"Buy URL"
-#define APE_TAG_FIELD_ARTIST_URL                L"Artist URL"
-#define APE_TAG_FIELD_PUBLISHER_URL             L"Publisher URL"
-#define APE_TAG_FIELD_FILE_URL                  L"File URL"
-#define APE_TAG_FIELD_COPYRIGHT_URL             L"Copyright URL"
-#define APE_TAG_FIELD_TOOL_NAME                 L"Tool Name"
-#define APE_TAG_FIELD_TOOL_VERSION              L"Tool Version"
-#define APE_TAG_FIELD_PEAK_LEVEL                L"Peak Level"
-#define APE_TAG_FIELD_REPLAY_GAIN_RADIO         L"Replay Gain (radio)"
-#define APE_TAG_FIELD_REPLAY_GAIN_ALBUM         L"Replay Gain (album)"
-#define APE_TAG_FIELD_COMPOSER                  L"Composer"
-#define APE_TAG_FIELD_KEYWORDS                  L"Keywords"
-
-/*****************************************************************************************
-Standard APE tag field values
-*****************************************************************************************/
-#define APE_TAG_GENRE_UNDEFINED                 L"Undefined"
-
-/*****************************************************************************************
-ID3 v1.1 tag
-*****************************************************************************************/
-#define ID3_TAG_BYTES    128
-struct ID3_TAG
-{
-    char Header[3];             // should equal 'TAG'
-    char Title[30];             // title
-    char Artist[30];            // artist
-    char Album[30];             // album
-    char Year[4];               // year
-    char Comment[29];           // comment
-    unsigned char Track;        // track
-    unsigned char Genre;        // genre
-};
-
-/*****************************************************************************************
-Footer (and header) flags
-*****************************************************************************************/
-#define APE_TAG_FLAG_CONTAINS_HEADER            (1 << 31)
-#define APE_TAG_FLAG_CONTAINS_FOOTER            (1 << 30)
-#define APE_TAG_FLAG_IS_HEADER                  (1 << 29)
-
-#define APE_TAG_FLAGS_DEFAULT                   (APE_TAG_FLAG_CONTAINS_FOOTER)
-
-/*****************************************************************************************
-Tag field flags
-*****************************************************************************************/
-#define TAG_FIELD_FLAG_READ_ONLY                (1 << 0)
-
-#define TAG_FIELD_FLAG_DATA_TYPE_MASK           (6)
-#define TAG_FIELD_FLAG_DATA_TYPE_TEXT_UTF8      (0 << 1)
-#define TAG_FIELD_FLAG_DATA_TYPE_BINARY         (1 << 1)
-#define TAG_FIELD_FLAG_DATA_TYPE_EXTERNAL_INFO  (2 << 1)
-#define TAG_FIELD_FLAG_DATA_TYPE_RESERVED       (3 << 1)
-
-/*****************************************************************************************
-The footer at the end of APE tagged files (can also optionally be at the front of the tag)
-*****************************************************************************************/
-#define APE_TAG_FOOTER_BYTES    32
-
-class APE_TAG_FOOTER
-{
-protected:
-    char m_cID[8];              // should equal 'APETAGEX'    
-    int m_nVersion;             // equals CURRENT_APE_TAG_VERSION
-    int m_nSize;                // the complete size of the tag, including this footer (excludes header)
-    int m_nFields;              // the number of fields in the tag
-    int m_nFlags;               // the tag flags
-    char m_cReserved[8];        // reserved for later use (must be zero)
-
-public:
-    APE_TAG_FOOTER(int nFields = 0, int nFieldBytes = 0)
-    {
-        memcpy(m_cID, "APETAGEX", 8);
-        memset(m_cReserved, 0, 8);
-        m_nFields = nFields;
-        m_nFlags = APE_TAG_FLAGS_DEFAULT;
-        m_nSize = nFieldBytes + APE_TAG_FOOTER_BYTES;
-        m_nVersion = CURRENT_APE_TAG_VERSION;
-    }
-
-    int GetTotalTagBytes() { return m_nSize + (GetHasHeader() ? APE_TAG_FOOTER_BYTES : 0); }
-    int GetFieldBytes() { return m_nSize - APE_TAG_FOOTER_BYTES; }
-    int GetFieldsOffset() { return GetHasHeader() ? APE_TAG_FOOTER_BYTES : 0; }
-    int GetNumberFields() { return m_nFields; }
-    bool GetHasHeader() { return (m_nFlags & APE_TAG_FLAG_CONTAINS_HEADER) ? true : false; }
-    bool GetIsHeader() { return (m_nFlags & APE_TAG_FLAG_IS_HEADER) ? true : false; }
-    int GetVersion() { return m_nVersion; }
-
-    bool GetIsValid(bool bAllowHeader)
-    {
-        bool bValid = (strncmp(m_cID, "APETAGEX", 8) == 0) && 
-            (m_nVersion <= CURRENT_APE_TAG_VERSION) &&
-            (m_nFields <= 65536) &&
-            (m_nSize >= APE_TAG_FOOTER_BYTES) &&
-            (GetFieldBytes() <= (1024 * 1024 * 16));
-        
-        if (bValid && !bAllowHeader && GetIsHeader())
-            bValid = false;
-
-        return bValid ? true : false;
-    }
-};
-
-/*****************************************************************************************
-CAPETagField class (an APE tag is an array of these)
-*****************************************************************************************/
-class CAPETagField
-{
-public:
-    // create a tag field (use nFieldBytes = -1 for null-terminated strings)
-    CAPETagField(const str_utfn * pFieldName, const void * pFieldValue, int nFieldBytes = -1, int nFlags = 0);
-    
-    // destructor
-    ~CAPETagField();
-
-    // gets the size of the entire field in bytes (name, value, and metadata)
-    int GetFieldSize();
-    
-    // get the name of the field
-    const str_utfn * GetFieldName();
-
-    // get the value of the field
-    const char * GetFieldValue();
-    
-    // get the size of the value (in bytes)
-    int GetFieldValueSize();
-
-    // get any special flags
-    int GetFieldFlags();
-    
-    // output the entire field to a buffer (GetFieldSize() bytes)
-    int SaveField(char * pBuffer, int nBytes);
-
-    // checks to see if the field is read-only
-    bool GetIsReadOnly() { return (m_nFieldFlags & TAG_FIELD_FLAG_READ_ONLY) ? true : false; }
-    bool GetIsUTF8Text() { return ((m_nFieldFlags & TAG_FIELD_FLAG_DATA_TYPE_MASK) == TAG_FIELD_FLAG_DATA_TYPE_TEXT_UTF8) ? true : false; }
-
-    // set helpers (use with EXTREME caution)
-    void SetFieldFlags(int nFlags) { m_nFieldFlags = nFlags; }
-
-private:        
-    CSmartPtr<str_utfn> m_spFieldNameUTF16;
-    CSmartPtr<char> m_spFieldValue;
-    int m_nFieldFlags;
-    int m_nFieldValueBytes;
-};
-
-/*****************************************************************************************
-CAPETag class
-*****************************************************************************************/
-class CAPETag
-{
-public:
-    // create an APE tag 
-    // bAnalyze determines whether it will analyze immediately or on the first request
-    // be careful with multiple threads / file pointer movement if you don't analyze immediately
-    CAPETag(CIO * pIO, bool bAnalyze = true);
-    CAPETag(const str_utfn * pFilename, bool bAnalyze = true);
-    
-    // destructor
-    ~CAPETag();
-
-    // save the tag to the I/O source (bUseOldID3 forces it to save as an ID3v1.1 tag instead of an APE tag)
-    int Save(bool bUseOldID3 = false);
-    
-    // removes any tags from the file (bUpdate determines whether is should re-analyze after removing the tag)
-    int Remove(bool bUpdate = true);
-
-    // sets the value of a field (use nFieldBytes = -1 for null terminated strings)
-    // note: using NULL or "" for a string type will remove the field
-    int SetFieldString(const str_utfn * pFieldName, const str_utfn * pFieldValue, const str_utfn * pListDelimiter = NULL);
-    int SetFieldString(const str_utfn * pFieldName, const char * pFieldValue, bool bAlreadyUTF8Encoded, const str_utfn * pListDelimiter = NULL);
-    int SetFieldBinary(const str_utfn * pFieldName, const void * pFieldValue, intn nFieldBytes, int nFieldFlags);
-
-    // gets the value of a field (returns -1 and an empty buffer if the field doesn't exist)
-    int GetFieldBinary(const str_utfn * pFieldName, void * pBuffer, int * pBufferBytes);
-    int GetFieldString(const str_utfn * pFieldName, str_utfn * pBuffer, int * pBufferCharacters, const str_utfn * pListDelimiter = _T("; "));
-    int GetFieldString(const str_utfn * pFieldName, str_ansi * pBuffer, int * pBufferCharacters, bool bUTF8Encode = false);
-
-    // remove a specific field
-    int RemoveField(const str_utfn * pFieldName);
-    int RemoveField(int nIndex);
-
-    // clear all the fields
-    int ClearFields();
-    
-    // see if we've been analyzed (we do lazy analysis)
-    bool GetAnalyzed() { return m_bAnalyzed; }
-
-    // get the total tag bytes in the file from the last analyze
-    // need to call Save() then Analyze() to update any changes
-    int GetTagBytes();
-
-    // fills in an ID3_TAG using the current fields (useful for quickly converting the tag)
-    int CreateID3Tag(ID3_TAG * pID3Tag);
-
-    // see whether the file has an ID3 or APE tag
-    bool GetHasID3Tag() { if (!m_bAnalyzed) { Analyze(); } return m_bHasID3Tag; }
-    bool GetHasAPETag() { if (!m_bAnalyzed) { Analyze(); } return m_bHasAPETag; }
-    int GetAPETagVersion() { return GetHasAPETag() ? m_nAPETagVersion : -1; }
-
-    // gets a desired tag field (returns NULL if not found)
-    // again, be careful, because this a pointer to the actual field in this class
-    CAPETagField * GetTagField(const str_utfn * pFieldName);
-    CAPETagField * GetTagField(int nIndex);
-
-    // options
-    void SetIgnoreReadOnly(bool bIgnoreReadOnly) { m_bIgnoreReadOnly = bIgnoreReadOnly; }
-
-	// statics
-	static const int s_nID3GenreUndefined = 255;
-	static const int s_nID3GenreCount = 148;
-	static const wchar_t * s_aryID3GenreNames[s_nID3GenreCount];
-
-private:
-    // private functions
-    int Analyze();
-    int GetTagFieldIndex(const str_utfn * pFieldName);
-    int WriteBufferToEndOfIO(void * pBuffer, int nBytes);
-    int LoadField(const char * pBuffer, int nMaximumBytes, int * pBytes);
-    int SortFields();
-    static int CompareFields(const void * pA, const void * pB);
-
-    // helper set / get field functions
-    int SetFieldID3String(const str_utfn * pFieldName, const char * pFieldValue, int nBytes);
-    int GetFieldID3String(const str_utfn * pFieldName, char * pBuffer, int nBytes);
-
-    // private data
-    CSmartPtr<CIO> m_spIO;
-    bool m_bAnalyzed;
-    int m_nTagBytes;
-    int m_nFields;
-    CAPETagField * m_aryFields[256];
-    bool m_bHasAPETag;
-    int m_nAPETagVersion;
-    bool m_bHasID3Tag;
-    bool m_bIgnoreReadOnly;
-};
-
-}
\ No newline at end of file
diff -Naur mac-sdk-4.66/Source/MACLib/MACLib.h mac-sdk-4.66-gcc/Source/MACLib/MACLib.h
--- mac-sdk-4.66/Source/MACLib/MACLib.h	2019-03-02 19:31:10 +0000
+++ mac-sdk-4.66-gcc/Source/MACLib/MACLib.h	1970-01-01 00:00:00 +0000
@@ -1,483 +0,0 @@
-/*****************************************************************************************
-Monkey's Audio MACLib.h (include for using MACLib.lib in your projects)
-Copyright (C) 2000-2019 by Matthew T. Ashland   All Rights Reserved.
-
-Overview:
-
-There are two main interfaces... create one (using CreateIAPExxx) and go to town:
-
-    IAPECompress - for creating APE files
-    IAPEDecompress - for decompressing and analyzing APE files
-
-Note(s):
-
-Unless otherwise specified, functions return ERROR_SUCCESS (0) on success and an 
-error code on failure.
-
-The terminology "Sample" refers to a single sample value, and "Block" refers 
-to a collection of "Channel" samples.  For simplicity, MAC typically uses blocks
-everywhere so that channel mis-alignment cannot happen. (i.e. on a CD, a sample is
-2 bytes and a block is 4 bytes ([2 bytes per sample] * [2 channels] = 4 bytes))
-
-License:
-
-http://monkeysaudio.com/license.html
-
-Questions / Suggestions:
-
-Please direct questions or comments to this email address:
-mail at monkeysaudio dot com
-[ due to a large volume of email and spams, a response can not be guaranteed ]
-*****************************************************************************************/
-
-#pragma once
-
-namespace APE
-{
-
-/*************************************************************************************************
-APE File Format Overview: (pieces in order -- only valid for the latest version APE files)
-
-    JUNK - any amount of "junk" before the APE_DESCRIPTOR (so people that put ID3v2 tags on the files aren't hosed)
-    APE_DESCRIPTOR - defines the sizes (and offsets) of all the pieces, as well as the MD5 checksum
-    APE_HEADER - describes all of the necessary information about the APE file
-    SEEK TABLE - the table that represents seek offsets [optional]
-    HEADER DATA - the pre-audio data from the original file [optional]
-    APE FRAMES - the actual compressed audio (broken into frames for seekability)
-    TERMINATING DATA - the post-audio data from the original file [optional]
-    TAG - describes all the properties of the file [optional]
-
-Notes:
-
-    Junk:
-
-    This block may not be supported in the future, so don't write any software that adds meta data
-    before the APE_DESCRIPTOR.  Please use the APE Tag for any meta data.
-
-    Seek Table:
-
-    A 32-bit unsigned integer array of offsets from the header to the frame data.  May become "delta" 
-    values someday to better suit huge files.
-
-    MD5 Hash:
-
-    Since the header is the last part written to an APE file, you must calculate the MD5 checksum out of order.
-    So, you first calculate from the tail of the seek table to the end of the terminating data.
-    Then, go back and do from the end of the descriptor to the tail of the seek table.
-    You may wish to just cache the header data when starting and run it last, so you don't 
-    need to seek back in the I/O.
-*************************************************************************************************/
-
-/*****************************************************************************************
-Defines
-*****************************************************************************************/
-#define COMPRESSION_LEVEL_FAST          1000
-#define COMPRESSION_LEVEL_NORMAL        2000
-#define COMPRESSION_LEVEL_HIGH          3000
-#define COMPRESSION_LEVEL_EXTRA_HIGH    4000
-#define COMPRESSION_LEVEL_INSANE        5000
-
-#define MAC_FORMAT_FLAG_8_BIT                 1    // is 8-bit [OBSOLETE]
-#define MAC_FORMAT_FLAG_CRC                   2    // uses the new CRC32 error detection [OBSOLETE]
-#define MAC_FORMAT_FLAG_HAS_PEAK_LEVEL        4    // uint32 nPeakLevel after the header [OBSOLETE]
-#define MAC_FORMAT_FLAG_24_BIT                8    // is 24-bit [OBSOLETE]
-#define MAC_FORMAT_FLAG_HAS_SEEK_ELEMENTS    16    // has the number of seek elements after the peak level
-#define MAC_FORMAT_FLAG_CREATE_WAV_HEADER    32    // create the wave header on decompression (not stored)
-
-#define CREATE_WAV_HEADER_ON_DECOMPRESSION    -1
-#define MAX_AUDIO_BYTES_UNKNOWN 0xFFFFFFFF
-
-/*****************************************************************************************
-Progress callbacks
-*****************************************************************************************/
-typedef void (__stdcall * APE_PROGRESS_CALLBACK) (int);
-
-class IAPEProgressCallback
-{
-public:
-    
-	virtual ~IAPEProgressCallback() { }
-    virtual void Progress(int nPercentageDone) = 0;
-    virtual int GetKillFlag() = 0; // KILL_FLAG_CONTINUE to continue
-};
-
-/*****************************************************************************************
-All structures are designed for 4-byte alignment
-*****************************************************************************************/
-#pragma pack(push)
-#pragma pack(4)
-
-/*****************************************************************************************
-WAV header structure
-*****************************************************************************************/
-struct WAVE_HEADER
-{
-    // RIFF header
-    char cRIFFHeader[4];
-    unsigned int nRIFFBytes;
-
-    // data type
-    char cDataTypeID[4];
-
-    // wave format
-    char cFormatHeader[4];
-    unsigned int nFormatBytes;
-
-    unsigned short nFormatTag;
-    unsigned short nChannels;
-    unsigned int nSamplesPerSec;
-    unsigned int nAvgBytesPerSec;
-    unsigned short nBlockAlign;
-    unsigned short nBitsPerSample;
-    
-    // data chunk header
-    char cDataHeader[4];
-    unsigned int nDataBytes;
-};
-
-/*****************************************************************************************
-APE_DESCRIPTOR structure (file header that describes lengths, offsets, etc.)
-*****************************************************************************************/
-struct APE_DESCRIPTOR
-{
-    char   cID[4];                             // should equal 'MAC '
-    uint16 nVersion;                           // version number * 1000 (3.81 = 3810) (remember that 4-byte alignment causes this to take 4-bytes)
-
-    uint32 nDescriptorBytes;                   // the number of descriptor bytes (allows later expansion of this header)
-    uint32 nHeaderBytes;                       // the number of header APE_HEADER bytes
-    uint32 nSeekTableBytes;                    // the number of bytes of the seek table
-    uint32 nHeaderDataBytes;                   // the number of header data bytes (from original file)
-    uint32 nAPEFrameDataBytes;                 // the number of bytes of APE frame data
-    uint32 nAPEFrameDataBytesHigh;             // the high order number of APE frame data bytes
-    uint32 nTerminatingDataBytes;              // the terminating data of the file (not including tag data)
-
-    uint8  cFileMD5[16];                       // the MD5 hash of the file (see notes for usage... it's a littly tricky)
-};
-
-/*****************************************************************************************
-APE_HEADER structure (describes the format, duration, etc. of the APE file)
-*****************************************************************************************/
-struct APE_HEADER
-{
-    uint16 nCompressionLevel;                 // the compression level (see defines I.E. COMPRESSION_LEVEL_FAST)
-    uint16 nFormatFlags;                      // any format flags (for future use)
-
-    uint32 nBlocksPerFrame;                   // the number of audio blocks in one frame
-    uint32 nFinalFrameBlocks;                 // the number of audio blocks in the final frame
-    uint32 nTotalFrames;                      // the total number of frames
-
-    uint16 nBitsPerSample;                    // the bits per sample (typically 16)
-    uint16 nChannels;                         // the number of channels (1 or 2)
-    uint32 nSampleRate;                       // the sample rate (typically 44100)
-};
-
-/*************************************************************************************************
-Reset alignment
-*************************************************************************************************/
-#pragma pack(pop)
-
-/*************************************************************************************************
-Classes (fully defined elsewhere)
-*************************************************************************************************/
-class CIO;
-class CInputSource;
-class CAPEInfo;
-
-/*************************************************************************************************
-IAPEDecompress fields - used when querying for information
-
-Note(s):
--the distinction between APE_INFO_XXXX and APE_DECOMPRESS_XXXX is that the first is querying the APE
-information engine, and the other is querying the decompressor, and since the decompressor can be
-a range of an APE file (for APL), differences will arise.  Typically, use the APE_DECOMPRESS_XXXX
-fields when querying for info about the length, etc. so APL will work properly. 
-(i.e. (APE_INFO_TOTAL_BLOCKS != APE_DECOMPRESS_TOTAL_BLOCKS) for APL files)
-*************************************************************************************************/
-enum APE_DECOMPRESS_FIELDS
-{
-    APE_INFO_FILE_VERSION = 1000,               // version of the APE file * 1000 (3.93 = 3930) [ignored, ignored]
-    APE_INFO_COMPRESSION_LEVEL = 1001,          // compression level of the APE file [ignored, ignored]
-    APE_INFO_FORMAT_FLAGS = 1002,               // format flags of the APE file [ignored, ignored]
-    APE_INFO_SAMPLE_RATE = 1003,                // sample rate (Hz) [ignored, ignored]
-    APE_INFO_BITS_PER_SAMPLE = 1004,            // bits per sample [ignored, ignored]
-    APE_INFO_BYTES_PER_SAMPLE = 1005,           // number of bytes per sample [ignored, ignored]
-    APE_INFO_CHANNELS = 1006,                   // channels [ignored, ignored]
-    APE_INFO_BLOCK_ALIGN = 1007,                // block alignment [ignored, ignored]
-    APE_INFO_BLOCKS_PER_FRAME = 1008,           // number of blocks in a frame (frames are used internally)  [ignored, ignored]
-    APE_INFO_FINAL_FRAME_BLOCKS = 1009,         // blocks in the final frame (frames are used internally) [ignored, ignored]
-    APE_INFO_TOTAL_FRAMES = 1010,               // total number frames (frames are used internally) [ignored, ignored]
-    APE_INFO_WAV_HEADER_BYTES = 1011,           // header bytes of the decompressed WAV [ignored, ignored]
-    APE_INFO_WAV_TERMINATING_BYTES = 1012,      // terminating bytes of the decompressed WAV [ignored, ignored]
-    APE_INFO_WAV_DATA_BYTES = 1013,             // data bytes of the decompressed WAV [ignored, ignored]
-    APE_INFO_WAV_TOTAL_BYTES = 1014,            // total bytes of the decompressed WAV [ignored, ignored]
-    APE_INFO_APE_TOTAL_BYTES = 1015,            // total bytes of the APE file [ignored, ignored]
-    APE_INFO_TOTAL_BLOCKS = 1016,               // total blocks of audio data [ignored, ignored]
-    APE_INFO_LENGTH_MS = 1017,                  // length in ms (1 sec = 1000 ms) [ignored, ignored]
-    APE_INFO_AVERAGE_BITRATE = 1018,            // average bitrate of the APE [ignored, ignored]
-    APE_INFO_FRAME_BITRATE = 1019,              // bitrate of specified APE frame [frame index, ignored]
-    APE_INFO_DECOMPRESSED_BITRATE = 1020,       // bitrate of the decompressed WAV [ignored, ignored]
-    APE_INFO_PEAK_LEVEL = 1021,                 // peak audio level (obsolete) (-1 is unknown) [ignored, ignored]
-    APE_INFO_SEEK_BIT = 1022,                   // bit offset [frame index, ignored]
-    APE_INFO_SEEK_BYTE = 1023,                  // byte offset [frame index, ignored]
-    APE_INFO_WAV_HEADER_DATA = 1024,            // error code [buffer *, max bytes]
-    APE_INFO_WAV_TERMINATING_DATA = 1025,       // error code [buffer *, max bytes]
-    APE_INFO_WAVEFORMATEX = 1026,               // error code [waveformatex *, ignored]
-    APE_INFO_IO_SOURCE = 1027,                  // I/O source (CIO *) [ignored, ignored]
-    APE_INFO_FRAME_BYTES = 1028,                // bytes (compressed) of the frame [frame index, ignored]
-    APE_INFO_FRAME_BLOCKS = 1029,               // blocks in a given frame [frame index, ignored]
-    APE_INFO_TAG = 1030,                        // point to tag (CAPETag *) [ignored, ignored]
-    
-    APE_DECOMPRESS_CURRENT_BLOCK = 2000,        // current block location [ignored, ignored]
-    APE_DECOMPRESS_CURRENT_MS = 2001,           // current millisecond location [ignored, ignored]
-    APE_DECOMPRESS_TOTAL_BLOCKS = 2002,         // total blocks in the decompressors range [ignored, ignored]
-    APE_DECOMPRESS_LENGTH_MS = 2003,            // length of the decompressors range in milliseconds [ignored, ignored]
-    APE_DECOMPRESS_CURRENT_BITRATE = 2004,      // current bitrate [ignored, ignored]
-    APE_DECOMPRESS_AVERAGE_BITRATE = 2005,      // average bitrate (works with ranges) [ignored, ignored]
-    APE_DECOMPRESS_CURRENT_FRAME = 2006,        // current frame
-
-    APE_INTERNAL_INFO = 3000,                   // for internal use -- don't use (returns APE_FILE_INFO *) [ignored, ignored]
-};
-
-/*************************************************************************************************
-IAPEDecompress - interface for working with existing APE files (decoding, seeking, analyzing, etc.)
-*************************************************************************************************/
-class IAPEDecompress
-{
-public:
-    // destructor (needed so implementation's destructor will be called)
-    virtual ~IAPEDecompress() {}
-    
-    /*********************************************************************************************
-    * Decompress / Seek
-    *********************************************************************************************/
-    
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    // GetData(...) - gets raw decompressed audio
-    // 
-    // Parameters:
-    //    char * pBuffer
-    //        a pointer to a buffer to put the data into
-    //    int nBlocks
-    //        the number of audio blocks desired (see note at intro about blocks vs. samples)
-    //    int * pBlocksRetrieved
-    //        the number of blocks actually retrieved (could be less at end of file or on critical failure)
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    virtual int GetData(char * pBuffer, intn nBlocks, intn * pBlocksRetrieved) = 0;
-
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    // Seek(...) - seeks
-    // 
-    // Parameters:
-    //    int nBlockOffset
-    //        the block to seek to (see note at intro about blocks vs. samples)
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    virtual int Seek(intn nBlockOffset) = 0;
-
-    /*********************************************************************************************
-    * Get Information
-    *********************************************************************************************/
-
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    // GetInfo(...) - get information about the APE file or the state of the decompressor
-    // 
-    // Parameters:
-    //    APE_DECOMPRESS_FIELDS Field
-    //        the field we're querying (see APE_DECOMPRESS_FIELDS above for more info)
-    //    int nParam1
-    //        generic parameter... usage is listed in APE_DECOMPRESS_FIELDS
-    //    int nParam2
-    //        generic parameter... usage is listed in APE_DECOMPRESS_FIELDS
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    virtual intn GetInfo(APE_DECOMPRESS_FIELDS Field, intn nParam1 = 0, intn nParam2 = 0) = 0;
-};
-
-/*************************************************************************************************
-IAPECompress - interface for creating APE files
-
-Usage:
-
-    To create an APE file, you Start(...), then add data (in a variety of ways), then Finish(...)
-*************************************************************************************************/
-class IAPECompress
-{
-public:
-    // destructor (needed so implementation's destructor will be called)
-    virtual ~IAPECompress() {}
-    
-    /*********************************************************************************************
-    * Start
-    *********************************************************************************************/
-    
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    // Start(...) / StartEx(...) - starts encoding
-    // 
-    // Parameters:
-    //    CIO * pioOutput / const str_utfn * pFilename
-    //        the output... either a filename or an I/O source
-    //    WAVEFORMATEX * pwfeInput
-    //        format of the audio to encode (use FillWaveFormatEx() if necessary)
-    //    int nMaxAudioBytes
-    //        the absolute maximum audio bytes that will be encoded... encoding fails with a
-    //        ERROR_APE_COMPRESS_TOO_MUCH_DATA if you attempt to encode more than specified here
-    //        (if unknown, use MAX_AUDIO_BYTES_UNKNOWN to allocate as much storage in the seek table as
-    //        possible... limit is then 2 GB of data (~4 hours of CD music)... this wastes around
-    //        30kb, so only do it if completely necessary)
-    //    int nCompressionLevel
-    //        the compression level for the APE file (fast - extra high)
-    //        (note: extra-high is much slower for little gain)
-    //    const void * pHeaderData
-    //        a pointer to a buffer containing the WAV header (data before the data block in the WAV)
-    //        (note: use NULL for on-the-fly encoding... see next parameter)
-    //    int nHeaderBytes
-    //        number of bytes in the header data buffer (use CREATE_WAV_HEADER_ON_DECOMPRESSION and
-    //        NULL for the pHeaderData and MAC will automatically create the appropriate WAV header
-    //        on decompression)
-    //////////////////////////////////////////////////////////////////////////////////////////////
-
-    virtual int Start(const str_utfn * pOutputFilename, const WAVEFORMATEX * pwfeInput, 
-        int64 nMaxAudioBytes = MAX_AUDIO_BYTES_UNKNOWN, intn nCompressionLevel = COMPRESSION_LEVEL_NORMAL, 
-        const void * pHeaderData = NULL, int64 nHeaderBytes = CREATE_WAV_HEADER_ON_DECOMPRESSION) = 0;
-
-    virtual int StartEx(CIO * pioOutput, const WAVEFORMATEX * pwfeInput, 
-		int64 nMaxAudioBytes = MAX_AUDIO_BYTES_UNKNOWN, intn nCompressionLevel = COMPRESSION_LEVEL_NORMAL,
-        const void * pHeaderData = NULL, int64 nHeaderBytes = CREATE_WAV_HEADER_ON_DECOMPRESSION) = 0;
-    
-    /*********************************************************************************************
-    * Add / Compress Data
-    *    - there are 3 ways to add data:
-    *        1) simple call AddData(...)
-    *        2) lock MAC's buffer, copy into it, and unlock (LockBuffer(...) / UnlockBuffer(...))
-    *        3) from an I/O source (AddDataFromInputSource(...))
-    *********************************************************************************************/
-
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    // AddData(...) - adds data to the encoder
-    // 
-    // Parameters:
-    //    unsigned char * pData
-    //        a pointer to a buffer containing the raw audio data
-    //    int nBytes
-    //        the number of bytes in the buffer
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    virtual int64 AddData(unsigned char * pData, int64 nBytes) = 0;
-    
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    // GetBufferBytesAvailable(...) - returns the number of bytes available in the buffer
-    //    (helpful when locking)
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    virtual int64 GetBufferBytesAvailable() = 0;
-
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    // LockBuffer(...) - locks MAC's buffer so we can copy into it
-    // 
-    // Parameters:
-    //    int * pBytesAvailable
-    //        returns the number of bytes available in the buffer (DO NOT COPY MORE THAN THIS IN)
-    //
-    // Return:
-    //    pointer to the buffer (add at that location)
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    virtual unsigned char * LockBuffer(int64 * pBytesAvailable) = 0;
-
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    // UnlockBuffer(...) - releases the buffer
-    // 
-    // Parameters:
-    //    int nBytesAdded
-    //        the number of bytes copied into the buffer
-    //    bool bProcess
-    //        whether MAC should process as much as possible of the buffer
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    virtual int64 UnlockBuffer(int64 nBytesAdded, bool bProcess = true) = 0;
-    
-
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    // AddDataFromInputSource(...) - use a CInputSource (input source) to add data
-    //
-    // Parameters:
-    //    CInputSource * pInputSource
-    //        a pointer to the input source
-    //    int nMaxBytes
-    //        the maximum number of bytes to let MAC add (-1 if MAC can add any amount)
-    //    int * pBytesAdded
-    //        returns the number of bytes added from the I/O source
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    virtual int64 AddDataFromInputSource(CInputSource * pInputSource, int64 nMaxBytes = 0, int64 * pBytesAdded = NULL) = 0;
-    
-    /*********************************************************************************************
-    * Finish / Kill
-    *********************************************************************************************/
-
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    // Finish(...) - ends encoding and finalizes the file
-    // 
-    // Parameters:
-    //    unsigned char * pTerminatingData
-    //        a pointer to a buffer containing the information to place at the end of the APE file
-    //        (comprised of the WAV terminating data (data after the data block in the WAV) followed
-    //        by any tag information)
-    //    int nTerminatingBytes
-    //        number of bytes in the terminating data buffer
-    //    int nWAVTerminatingBytes
-    //        the number of bytes of the terminating data buffer that should be appended to a decoded
-    //        WAV file (it's basically nTerminatingBytes - the bytes that make up the tag)
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    virtual int Finish(unsigned char * pTerminatingData, int64 nTerminatingBytes, int64 nWAVTerminatingBytes) = 0;
-
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    // Kill(...) - stops encoding and deletes the output file
-    // --- NOT CURRENTLY IMPLEMENTED ---
-    //////////////////////////////////////////////////////////////////////////////////////////////
-    virtual int Kill() = 0;
-};
-
-} // namespace APE
-
-/*************************************************************************************************
-Functions to create the interfaces
-
-Usage:
-    Interface creation returns a NULL pointer on failure (and fills error code if it was passed in)
-
-Usage example:
-    int nErrorCode;
-    IAPEDecompress * pAPEDecompress = CreateIAPEDecompress("c:\\1.ape", &nErrorCode);
-    if (pAPEDecompress == NULL)
-    {
-        // failure... nErrorCode will have specific code
-    }
-
-*************************************************************************************************/
-extern "C"
-{
-    APE::IAPEDecompress * __stdcall CreateIAPEDecompress(const APE::str_utfn * pFilename, int * pErrorCode = NULL);
-    APE::IAPEDecompress * __stdcall CreateIAPEDecompressEx(APE::CIO * pIO, int * pErrorCode = NULL);
-    APE::IAPEDecompress * __stdcall CreateIAPEDecompressEx2(APE::CAPEInfo * pAPEInfo, int nStartBlock = -1, int nFinishBlock = -1, int * pErrorCode = NULL);
-    APE::IAPECompress * __stdcall CreateIAPECompress(int * pErrorCode = NULL);
-}
-
-/*************************************************************************************************
-Simple functions - see the SDK sample projects for usage examples
-*************************************************************************************************/
-extern "C"
-{
-    // process whole files
-    DLLEXPORT int __stdcall CompressFile(const APE::str_ansi * pInputFilename, const APE::str_ansi * pOutputFilename, int nCompressionLevel = COMPRESSION_LEVEL_NORMAL, int * pPercentageDone = NULL, APE::APE_PROGRESS_CALLBACK ProgressCallback = 0, int * pKillFlag = NULL);
-    DLLEXPORT int __stdcall DecompressFile(const APE::str_ansi * pInputFilename, const APE::str_ansi * pOutputFilename, int * pPercentageDone, APE::APE_PROGRESS_CALLBACK ProgressCallback, int * pKillFlag);
-    DLLEXPORT int __stdcall ConvertFile(const APE::str_ansi * pInputFilename, const APE::str_ansi * pOutputFilename, int nCompressionLevel, int * pPercentageDone, APE::APE_PROGRESS_CALLBACK ProgressCallback, int * pKillFlag);
-    DLLEXPORT int __stdcall VerifyFile(const APE::str_ansi * pInputFilename, int * pPercentageDone, APE::APE_PROGRESS_CALLBACK ProgressCallback, int * pKillFlag, bool bQuickVerifyIfPossible = false);
-
-    DLLEXPORT int __stdcall CompressFileW(const APE::str_utfn * pInputFilename, const APE::str_utfn * pOutputFilename, int nCompressionLevel = COMPRESSION_LEVEL_NORMAL, int * pPercentageDone = NULL, APE::APE_PROGRESS_CALLBACK ProgressCallback = 0, int * pKillFlag = NULL);
-    DLLEXPORT int __stdcall DecompressFileW(const APE::str_utfn * pInputFilename, const APE::str_utfn * pOutputFilename, int * pPercentageDone, APE::APE_PROGRESS_CALLBACK ProgressCallback, int * pKillFlag);
-    DLLEXPORT int __stdcall ConvertFileW(const APE::str_utfn * pInputFilename, const APE::str_utfn * pOutputFilename, int nCompressionLevel, int * pPercentageDone, APE::APE_PROGRESS_CALLBACK ProgressCallback, int * pKillFlag);
-    DLLEXPORT int __stdcall VerifyFileW(const APE::str_utfn * pInputFilename, int * pPercentageDone, APE::APE_PROGRESS_CALLBACK ProgressCallback, int * pKillFlag, bool bQuickVerifyIfPossible = false); 
-
-    DLLEXPORT int __stdcall CompressFileW2(const APE::str_utfn * pInputFilename, const APE::str_utfn * pOutputFilename, int nCompressionLevel = COMPRESSION_LEVEL_NORMAL, APE::IAPEProgressCallback * pProgressCallback = NULL);
-    DLLEXPORT int __stdcall DecompressFileW2(const APE::str_utfn * pInputFilename, const APE::str_utfn * pOutputFilename, APE::IAPEProgressCallback * pProgressCallback = NULL);
-    DLLEXPORT int __stdcall ConvertFileW2(const APE::str_utfn * pInputFilename, const APE::str_utfn * pOutputFilename, int nCompressionLevel, APE::IAPEProgressCallback * pProgressCallback = NULL);
-    DLLEXPORT int __stdcall VerifyFileW2(const APE::str_utfn * pInputFilename, APE::IAPEProgressCallback * pProgressCallback = NULL, bool bQuickVerifyIfPossible = false); 
-
-    // helper functions
-    DLLEXPORT int __stdcall FillWaveFormatEx(APE::WAVEFORMATEX * pWaveFormatEx, int nSampleRate = 44100, int nBitsPerSample = 16, int nChannels = 2);
-    DLLEXPORT int __stdcall FillWaveHeader(APE::WAVE_HEADER * pWAVHeader, APE::intn nAudioBytes, APE::WAVEFORMATEX * pWaveFormatEx, APE::intn nTerminatingBytes = 0);
-}
diff -Naur mac-sdk-4.66/Source/MACLib/Old/Anti-Predictor.cpp mac-sdk-4.66-gcc/Source/MACLib/Old/Anti-Predictor.cpp
--- mac-sdk-4.66/Source/MACLib/Old/Anti-Predictor.cpp	2019-03-02 19:31:10 +0000
+++ mac-sdk-4.66-gcc/Source/MACLib/Old/Anti-Predictor.cpp	2019-04-13 17:49:12 +0000
@@ -1,7 +1,7 @@
 #include "All.h"
 #ifdef APE_BACKWARDS_COMPATIBILITY
 
-#include "../MACLib.h"
+#include "MACLib.h"
 #include "Anti-Predictor.h"
 
 namespace APE
diff -Naur mac-sdk-4.66/Source/Projects/NonWindows/Makefile mac-sdk-4.66-gcc/Source/Projects/NonWindows/Makefile
--- mac-sdk-4.66/Source/Projects/NonWindows/Makefile	2019-03-02 19:31:10 +0000
+++ mac-sdk-4.66-gcc/Source/Projects/NonWindows/Makefile	2019-03-03 13:43:00 +0000
@@ -3,7 +3,7 @@
 
 VERSION	  = 4
 
-CXXOPTS	  = -I Source/Shared -I Source/MACLib -c
+CXXOPTS	  = -I Shared -I Source/Shared -I Source/MACLib -c
 LDOPTS	  = -lstdc++
 
 DLLLDOPTS = -shared
diff -Naur mac-sdk-4.66/Source/Shared/All.h mac-sdk-4.66-gcc/Source/Shared/All.h
--- mac-sdk-4.66/Source/Shared/All.h	2019-04-18 21:42:56 +0000
+++ mac-sdk-4.66-gcc/Source/Shared/All.h	1970-01-01 00:00:00 +0000
@@ -1,348 +0,0 @@
-#pragma once
-
-/*****************************************************************************************
-Platform
- 
-One of the following platforms should be defined (either in code or as a project setting):
-PLATFORM_WINDOWS
-PLATFORM_APPLE
-PLATFORM_LINUX
-*****************************************************************************************/
-#if !defined(PLATFORM_WINDOWS) && !defined(PLATFORM_APPLE) && !defined(PLATFORM_LINUX)
-	#pragma message("No platform set for MACLib, defaulting to Windows")
-	#define PLATFORM_WINDOWS
-#endif
-
-#ifdef PLATFORM_ANDROID
-#undef MBN
-#undef ODN
-#undef ODS
-#undef CATCH_ERRORS
-#undef ASSERT
-#undef _totlower
-#undef ZeroMemory
-#undef __forceinline
-#endif
-
-/*****************************************************************************************
-Global includes
-*****************************************************************************************/
-#include <stdint.h>
-#include <stdlib.h>
-#include <memory.h>
-#include <stdio.h>
-#include <math.h>
-
-#if defined(PLATFORM_WINDOWS)
-    #include "WindowsEnvironment.h"
-    #include <windows.h>
-    #include <tchar.h>
-    #include <assert.h>
-#else
-    #include <unistd.h>
-    #include <time.h>
-    #include <sys/time.h>
-    #include <sys/types.h>
-    #include <sys/stat.h>
-	#include <wchar.h>
-    #include "NoWindows.h"
-#endif
-#define ape_max(a,b)    (((a) > (b)) ? (a) : (b))
-#define ape_min(a,b)    (((a) < (b)) ? (a) : (b))
-
-#include "SmartPtr.h"
-
-/*****************************************************************************************
-Global compiler settings (useful for porting)
-*****************************************************************************************/
-// assembly code (helps performance, but limits portability)
-#if !defined(PLATFORM_ARM) && !defined(PLATFORM_ANDROID)
-	#if defined __SSE2__ || _M_IX86_FP == 2 || defined _M_X64
-		#define ENABLE_SSE_ASSEMBLY
-	#elif defined(_M_IX86)
-		#define ENABLE_SSE_ASSEMBLY
-		#define ENABLE_SSE_ASSEMBLY_DETECT
-	#endif
-	#ifdef _MSC_VER // doesn't compile in gcc
-		#ifndef PLATFORM_x64
-			#define ENABLE_MMX_ASSEMBLY
-		#endif
-	#endif
-#endif
-
-// APE_BACKWARDS_COMPATIBILITY is only needed for decoding APE 3.92 or earlier files.  It
-// has not been possible to make these files for over 10 years, so it's unlikely
-// that disabling APE_BACKWARDS_COMPATIBILITY would have any effect on a normal user.  For
-// porting or third party usage, it's probably best to not bother with APE_BACKWARDS_COMPATIBILITY.
-// A future release of Monkey's Audio itself may remove support for these obsolete files.
-#if !defined(PLATFORM_ANDROID)
-	#define APE_BACKWARDS_COMPATIBILITY
-#endif
-
-// compression modes
-#define ENABLE_COMPRESSION_MODE_FAST
-#define ENABLE_COMPRESSION_MODE_NORMAL
-#define ENABLE_COMPRESSION_MODE_HIGH
-#define ENABLE_COMPRESSION_MODE_EXTRA_HIGH
-
-// 64 bit platform
-#ifdef PLATFORM_64BIT
-	#define PLATFORM_x64
-#endif
-
-#if __x86_64__ || __aarch64__
-    #define PLATFORM_x64
-#endif
-
-/*****************************************************************************************
-Global types
-*****************************************************************************************/
-namespace APE
-{
-	// integer types
-#if defined(PLATFORM_x64)
-    typedef	int64_t                                     int64; // native integer, can safely hold a pointer
-    typedef int32_t                                     int32;
-#else
-	typedef	intptr_t                                    int32; // native integer, can safely hold a pointer
-    typedef int64_t                                     int64;
-#endif
-    //typedef intptr_t                                  intn;
-	//typedef uintptr_t                                 uintn;
-
-#if defined(PLATFORM_x64)
-// DO NOT CHANGE THE FOLLOWING 6 LINES! They are necessary for building Media Center 64 bit on non-windows platforms!
-    #ifndef PLATFORM_WINDOWS
-    	typedef long long intn;
-    	typedef unsigned long long uintn;
-    #else
-    	typedef int64_t intn;
-    	typedef uint64_t uintn;
-    #endif    
-#else
-    typedef int32_t intn;
-    typedef uint32_t uintn;
-#endif
-
-	typedef uint64_t                                    uint64;
-	typedef uint32_t                                    uint32;
-	typedef uint16_t                                    uint16;
-	typedef int16_t                                     int16;
-	typedef uint8_t                                     uint8;
-	typedef int8_t                                      int8;
-	
-	// string types
-	typedef char                                        str_ansi;
-	typedef unsigned char                               str_utf8;
-	typedef int16										str_utf16;
-	typedef wchar_t                                     str_utfn; // could be UTF-16 or UTF-32 depending on platform
-}
-
-/*****************************************************************************************
-Global macros
-*****************************************************************************************/
-#if defined(PLATFORM_WINDOWS)
-    #define IO_USE_WIN_FILE_IO
-    #define IO_HEADER_FILE                              "WinFileIO.h"
-    #define IO_CLASS_NAME                               CWinFileIO
-    #define DLLEXPORT                                   __declspec(dllexport)
-    #define SLEEP(MILLISECONDS)                         ::Sleep(MILLISECONDS)
-    #define MESSAGEBOX(PARENT, TEXT, CAPTION, TYPE)     ::MessageBox(PARENT, TEXT, CAPTION, TYPE)
-    #define PUMP_MESSAGE_LOOP                           { MSG Msg; while (PeekMessage(&Msg, NULL, 0, 0, PM_REMOVE) != 0) { TranslateMessage(&Msg); DispatchMessage(&Msg); } }
-    #define ODS                                         OutputDebugString
-    #define TICK_COUNT_TYPE                             unsigned long
-    #define TICK_COUNT_READ(VARIABLE)                   VARIABLE = GetTickCount()
-    #define TICK_COUNT_FREQ                             1000
-
-    #if !defined(ASSERT)
-        #if defined(_DEBUG)
-            #define ASSERT(e)                            assert(e)
-        #else
-            #define ASSERT(e)                            
-        #endif
-    #endif
-#else
-    #define IO_USE_STD_LIB_FILE_IO
-    #define IO_HEADER_FILE                              "StdLibFileIO.h"
-    #define IO_CLASS_NAME                               CStdLibFileIO
-    #define DLLEXPORT
-    #define SLEEP(MILLISECONDS)                         { struct timespec t; t.tv_sec = (MILLISECONDS) / 1000; t.tv_nsec = (MILLISECONDS) % 1000 * 1000000; nanosleep(&t, NULL); }
-    #define MESSAGEBOX(PARENT, TEXT, CAPTION, TYPE)
-    #define PUMP_MESSAGE_LOOP
-    #define ODS                                         printf
-    #define TICK_COUNT_TYPE                             unsigned long long
-    #define TICK_COUNT_READ(VARIABLE)                   { struct timeval t; gettimeofday(&t, NULL); VARIABLE = t.tv_sec * 1000000LLU + t.tv_usec; }
-    #define TICK_COUNT_FREQ                             1000000
-    #define ASSERT(e)
-    #define wcsncpy_s(A, B, COUNT) wcscpy(A, B)
-    #define wcscpy_s(A, B, C) wcscpy(A, C)
-    #define sprintf_s(A, B, C, D) sprintf(A, C, D)
-    #define strcpy_s(A, B, C) strcpy(A, C)
-    #define _tcscat_s(A, B, C) _tcscat(A, C)
-#endif
-
-/*****************************************************************************************
-WAVE format descriptor (binary compatible with Windows define, but in the APE namespace)
-*****************************************************************************************/
-namespace APE
-{
-#pragma pack(push, 1)
-	typedef struct tWAVEFORMATEX
-	{
-		WORD        wFormatTag;         /* format type */
-		WORD        nChannels;          /* number of channels (i.e. mono, stereo...) */
-		uint32      nSamplesPerSec;     /* sample rate */
-		uint32      nAvgBytesPerSec;    /* for buffer estimation */
-		WORD        nBlockAlign;        /* block size of data */
-		WORD        wBitsPerSample;     /* number of bits per sample of mono data */
-		WORD        cbSize;             /* the count in bytes of the size of */
-		/* extra information (after cbSize) */
-	} WAVEFORMATEX, *PWAVEFORMATEX, NEAR *NPWAVEFORMATEX, FAR *LPWAVEFORMATEX;
-#pragma pack(pop)
-}
-
-/*****************************************************************************************
-Global defines
-*****************************************************************************************/
-#define MAC_FILE_VERSION_NUMBER                         3990
-#define MAC_VERSION_STRING                              _T("4.66")
-#define MAC_NAME                                        _T("Monkey's Audio 4.66")
-#define PLUGIN_NAME                                     "Monkey's Audio Player v4.66"
-#define MJ_PLUGIN_NAME                                  _T("APE Plugin (v4.66)")
-#define CONSOLE_NAME                                    _T("--- Monkey's Audio Console Front End (v 4.66) (c) Matthew T. Ashland ---\n")
-#define PLUGIN_ABOUT                                    _T("Monkey's Audio Player v4.66\nCopyrighted (c) 2000-2019 by Matthew T. Ashland")
-#define MAC_DLL_INTERFACE_VERSION_NUMBER                1000
-#define ONE_MILLION										1000000
-#ifdef PLATFORM_WINDOWS
-	#define APE_FILENAME_SLASH '\\'
-#else
-	#define APE_FILENAME_SLASH '/'
-#endif
-
-/*****************************************************************************************
-Byte order
-*****************************************************************************************/
-#define __LITTLE_ENDIAN     1234
-#define __BIG_ENDIAN        4321
-#define __BYTE_ORDER        __LITTLE_ENDIAN
-
-/*****************************************************************************************
-Macros
-*****************************************************************************************/
-#define MB(TEST) MESSAGEBOX(NULL, TEST, _T("Information"), MB_OK);
-#define MBN(NUMBER) { TCHAR cNumber[16]; _stprintf(cNumber, _T("%d"), NUMBER); MESSAGEBOX(NULL, cNumber, _T("Information"), MB_OK); }
-
-#define SAFE_DELETE(POINTER) if (POINTER) { delete POINTER; POINTER = NULL; }
-#define SAFE_ARRAY_DELETE(POINTER) if (POINTER) { delete [] POINTER; POINTER = NULL; }
-#define SAFE_VOID_CLASS_DELETE(POINTER, Class) { Class *pClass = (Class *) POINTER; if (pClass) { delete pClass; POINTER = NULL; } }
-#define SAFE_FILE_CLOSE(HANDLE) if (HANDLE != INVALID_HANDLE_VALUE) { CloseHandle(HANDLE); HANDLE = INVALID_HANDLE_VALUE; }
-
-#define ODN(NUMBER) { TCHAR cNumber[16]; _stprintf(cNumber, _T("%d\n"), int(NUMBER)); ODS(cNumber); }
-
-#define CATCH_ERRORS(CODE) try { CODE } catch(...) { }
-
-#define RETURN_ON_ERROR(FUNCTION) {    int nResult = FUNCTION; if (nResult != 0) { return nResult; } }
-#define RETURN_VALUE_ON_ERROR(FUNCTION, VALUE) { int nResult = FUNCTION; if (nResult != 0) { return VALUE; } }
-#define RETURN_ON_EXCEPTION(CODE, VALUE) { try { CODE } catch(...) { return VALUE; } }
-
-#define THROW_ON_ERROR(CODE) { intn nResult = (intn) CODE; if (nResult != 0) throw(nResult); }
-
-#define EXPAND_1_TIMES(CODE) CODE
-#define EXPAND_2_TIMES(CODE) CODE CODE
-#define EXPAND_3_TIMES(CODE) CODE CODE CODE
-#define EXPAND_4_TIMES(CODE) CODE CODE CODE CODE
-#define EXPAND_5_TIMES(CODE) CODE CODE CODE CODE CODE
-#define EXPAND_6_TIMES(CODE) CODE CODE CODE CODE CODE CODE
-#define EXPAND_7_TIMES(CODE) CODE CODE CODE CODE CODE CODE CODE
-#define EXPAND_8_TIMES(CODE) CODE CODE CODE CODE CODE CODE CODE CODE
-#define EXPAND_9_TIMES(CODE) CODE CODE CODE CODE CODE CODE CODE CODE CODE
-#define EXPAND_12_TIMES(CODE) CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE
-#define EXPAND_14_TIMES(CODE) CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE
-#define EXPAND_15_TIMES(CODE) CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE
-#define EXPAND_16_TIMES(CODE) CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE
-#define EXPAND_30_TIMES(CODE) CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE
-#define EXPAND_31_TIMES(CODE) CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE
-#define EXPAND_32_TIMES(CODE) CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE
-#define EXPAND_64_TIMES(CODE) CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE CODE
-#define EXPAND_N_TIMES(NUMBER, CODE) EXPAND_##NUMBER##_TIMES(CODE)
-
-#define UNROLL_4_TIMES(MACRO) MACRO(0) MACRO(1) MACRO(2) MACRO(3)
-#define UNROLL_8_TIMES(MACRO) MACRO(0) MACRO(1) MACRO(2) MACRO(3) MACRO(4) MACRO(5) MACRO(6) MACRO(7)
-#define UNROLL_15_TIMES(MACRO) MACRO(0) MACRO(1) MACRO(2) MACRO(3) MACRO(4) MACRO(5) MACRO(6) MACRO(7) MACRO(8) MACRO(9) MACRO(10) MACRO(11) MACRO(12) MACRO(13) MACRO(14)
-#define UNROLL_16_TIMES(MACRO) MACRO(0) MACRO(1) MACRO(2) MACRO(3) MACRO(4) MACRO(5) MACRO(6) MACRO(7) MACRO(8) MACRO(9) MACRO(10) MACRO(11) MACRO(12) MACRO(13) MACRO(14) MACRO(15)
-#define UNROLL_64_TIMES(MACRO) MACRO(0) MACRO(1) MACRO(2) MACRO(3) MACRO(4) MACRO(5) MACRO(6) MACRO(7) MACRO(8) MACRO(9) MACRO(10) MACRO(11) MACRO(12) MACRO(13) MACRO(14) MACRO(15) MACRO(16) MACRO(17) MACRO(18) MACRO(19) MACRO(20) MACRO(21) MACRO(22) MACRO(23) MACRO(24) MACRO(25) MACRO(26) MACRO(27) MACRO(28) MACRO(29) MACRO(30) MACRO(31) MACRO(32) MACRO(33) MACRO(34) MACRO(35) MACRO(36) MACRO(37) MACRO(38) MACRO(39) MACRO(40) MACRO(41) MACRO(42) MACRO(43) MACRO(44) MACRO(45) MACRO(46) MACRO(47) MACRO(48) MACRO(49) MACRO(50) MACRO(51) MACRO(52) MACRO(53) MACRO(54) MACRO(55) MACRO(56) MACRO(57) MACRO(58) MACRO(59) MACRO(60) MACRO(61) MACRO(62) MACRO(63)
-#define UNROLL_128_TIMES(MACRO) MACRO(0) MACRO(1) MACRO(2) MACRO(3) MACRO(4) MACRO(5) MACRO(6) MACRO(7) MACRO(8) MACRO(9) MACRO(10) MACRO(11) MACRO(12) MACRO(13) MACRO(14) MACRO(15) MACRO(16) MACRO(17) MACRO(18) MACRO(19) MACRO(20) MACRO(21) MACRO(22) MACRO(23) MACRO(24) MACRO(25) MACRO(26) MACRO(27) MACRO(28) MACRO(29) MACRO(30) MACRO(31) MACRO(32) MACRO(33) MACRO(34) MACRO(35) MACRO(36) MACRO(37) MACRO(38) MACRO(39) MACRO(40) MACRO(41) MACRO(42) MACRO(43) MACRO(44) MACRO(45) MACRO(46) MACRO(47) MACRO(48) MACRO(49) MACRO(50) MACRO(51) MACRO(52) MACRO(53) MACRO(54) MACRO(55) MACRO(56) MACRO(57) MACRO(58) MACRO(59) MACRO(60) MACRO(61) MACRO(62) MACRO(63) MACRO(64) MACRO(65) MACRO(66) MACRO(67) MACRO(68) MACRO(69) MACRO(70) MACRO(71) MACRO(72) MACRO(73) MACRO(74) MACRO(75) MACRO(76) MACRO(77) MACRO(78) MACRO(79) MACRO(80) MACRO(81) MACRO(82) MACRO(83) MACRO(84) MACRO(85) MACRO(86) MACRO(87) MACRO(88) MACRO(89) MACRO(90) MACRO(91) MACRO(92) MACRO(93) MACRO(94) MACRO(95) MACRO(96) MACRO(97) MACRO(98) MACRO(99) MACRO(100) MACRO(101) MACRO(102) MACRO(103) MACRO(104) MACRO(105) MACRO(106) MACRO(107) MACRO(108) MACRO(109) MACRO(110) MACRO(111) MACRO(112) MACRO(113) MACRO(114) MACRO(115) MACRO(116) MACRO(117) MACRO(118) MACRO(119) MACRO(120) MACRO(121) MACRO(122) MACRO(123) MACRO(124) MACRO(125) MACRO(126) MACRO(127)
-#define UNROLL_256_TIMES(MACRO) MACRO(0) MACRO(1) MACRO(2) MACRO(3) MACRO(4) MACRO(5) MACRO(6) MACRO(7) MACRO(8) MACRO(9) MACRO(10) MACRO(11) MACRO(12) MACRO(13) MACRO(14) MACRO(15) MACRO(16) MACRO(17) MACRO(18) MACRO(19) MACRO(20) MACRO(21) MACRO(22) MACRO(23) MACRO(24) MACRO(25) MACRO(26) MACRO(27) MACRO(28) MACRO(29) MACRO(30) MACRO(31) MACRO(32) MACRO(33) MACRO(34) MACRO(35) MACRO(36) MACRO(37) MACRO(38) MACRO(39) MACRO(40) MACRO(41) MACRO(42) MACRO(43) MACRO(44) MACRO(45) MACRO(46) MACRO(47) MACRO(48) MACRO(49) MACRO(50) MACRO(51) MACRO(52) MACRO(53) MACRO(54) MACRO(55) MACRO(56) MACRO(57) MACRO(58) MACRO(59) MACRO(60) MACRO(61) MACRO(62) MACRO(63) MACRO(64) MACRO(65) MACRO(66) MACRO(67) MACRO(68) MACRO(69) MACRO(70) MACRO(71) MACRO(72) MACRO(73) MACRO(74) MACRO(75) MACRO(76) MACRO(77) MACRO(78) MACRO(79) MACRO(80) MACRO(81) MACRO(82) MACRO(83) MACRO(84) MACRO(85) MACRO(86) MACRO(87) MACRO(88) MACRO(89) MACRO(90) MACRO(91) MACRO(92) MACRO(93) MACRO(94) MACRO(95) MACRO(96) MACRO(97) MACRO(98) MACRO(99) MACRO(100) MACRO(101) MACRO(102) MACRO(103) MACRO(104) MACRO(105) MACRO(106) MACRO(107) MACRO(108) MACRO(109) MACRO(110) MACRO(111) MACRO(112) MACRO(113) MACRO(114) MACRO(115) MACRO(116) MACRO(117) MACRO(118) MACRO(119) MACRO(120) MACRO(121) MACRO(122) MACRO(123) MACRO(124) MACRO(125) MACRO(126) MACRO(127)    \
-    MACRO(128) MACRO(129) MACRO(130) MACRO(131) MACRO(132) MACRO(133) MACRO(134) MACRO(135) MACRO(136) MACRO(137) MACRO(138) MACRO(139) MACRO(140) MACRO(141) MACRO(142) MACRO(143) MACRO(144) MACRO(145) MACRO(146) MACRO(147) MACRO(148) MACRO(149) MACRO(150) MACRO(151) MACRO(152) MACRO(153) MACRO(154) MACRO(155) MACRO(156) MACRO(157) MACRO(158) MACRO(159) MACRO(160) MACRO(161) MACRO(162) MACRO(163) MACRO(164) MACRO(165) MACRO(166) MACRO(167) MACRO(168) MACRO(169) MACRO(170) MACRO(171) MACRO(172) MACRO(173) MACRO(174) MACRO(175) MACRO(176) MACRO(177) MACRO(178) MACRO(179) MACRO(180) MACRO(181) MACRO(182) MACRO(183) MACRO(184) MACRO(185) MACRO(186) MACRO(187) MACRO(188) MACRO(189) MACRO(190) MACRO(191) MACRO(192) MACRO(193) MACRO(194) MACRO(195) MACRO(196) MACRO(197) MACRO(198) MACRO(199) MACRO(200) MACRO(201) MACRO(202) MACRO(203) MACRO(204) MACRO(205) MACRO(206) MACRO(207) MACRO(208) MACRO(209) MACRO(210) MACRO(211) MACRO(212) MACRO(213) MACRO(214) MACRO(215) MACRO(216) MACRO(217) MACRO(218) MACRO(219) MACRO(220) MACRO(221) MACRO(222) MACRO(223) MACRO(224) MACRO(225) MACRO(226) MACRO(227) MACRO(228) MACRO(229) MACRO(230) MACRO(231) MACRO(232) MACRO(233) MACRO(234) MACRO(235) MACRO(236) MACRO(237) MACRO(238) MACRO(239) MACRO(240) MACRO(241) MACRO(242) MACRO(243) MACRO(244) MACRO(245) MACRO(246) MACRO(247) MACRO(248) MACRO(249) MACRO(250) MACRO(251) MACRO(252) MACRO(253) MACRO(254) MACRO(255)
-
-/*****************************************************************************************
-Error Codes
-*****************************************************************************************/
-
-// success
-#ifndef ERROR_SUCCESS
-#define ERROR_SUCCESS                                   0
-#endif
-
-// file and i/o errors (1000's)
-#define ERROR_IO_READ                                   1000
-#define ERROR_IO_WRITE                                  1001
-#define ERROR_INVALID_INPUT_FILE                        1002
-#define ERROR_INVALID_OUTPUT_FILE                       1003
-#define ERROR_INPUT_FILE_TOO_LARGE                      1004
-#define ERROR_INPUT_FILE_UNSUPPORTED_BIT_DEPTH          1005
-#define ERROR_INPUT_FILE_UNSUPPORTED_SAMPLE_RATE        1006
-#define ERROR_INPUT_FILE_UNSUPPORTED_CHANNEL_COUNT      1007
-#define ERROR_INPUT_FILE_TOO_SMALL                      1008
-#define ERROR_INVALID_CHECKSUM                          1009
-#define ERROR_DECOMPRESSING_FRAME                       1010
-#define ERROR_INITIALIZING_UNMAC                        1011
-#define ERROR_INVALID_FUNCTION_PARAMETER                1012
-#define ERROR_UNSUPPORTED_FILE_TYPE                     1013
-#define ERROR_UPSUPPORTED_FILE_VERSION                  1014
-
-// memory errors (2000's)
-#define ERROR_INSUFFICIENT_MEMORY                       2000
-
-// dll errors (3000's)
-#define ERROR_LOADINGAPE_DLL                            3000
-#define ERROR_LOADINGAPE_INFO_DLL                       3001
-#define ERROR_LOADING_UNMAC_DLL                         3002
-
-// general and misc errors
-#define ERROR_USER_STOPPED_PROCESSING                   4000
-#define ERROR_SKIPPED                                   4001
-
-// programmer errors
-#define ERROR_BAD_PARAMETER                             5000
-
-// IAPECompress errors
-#define ERROR_APE_COMPRESS_TOO_MUCH_DATA                6000
-
-// unknown error
-#define ERROR_UNDEFINED                                -1
-
-#define ERROR_EXPLANATION \
-    { ERROR_IO_READ                               , _T("I/O read error") },                         \
-    { ERROR_IO_WRITE                              , _T("I/O write error") },                        \
-    { ERROR_INVALID_INPUT_FILE                    , _T("invalid input file") },                     \
-    { ERROR_INVALID_OUTPUT_FILE                   , _T("invalid output file") },                    \
-    { ERROR_INPUT_FILE_TOO_LARGE                  , _T("input file file too large") },              \
-    { ERROR_INPUT_FILE_UNSUPPORTED_BIT_DEPTH      , _T("input file unsupported bit depth") },       \
-    { ERROR_INPUT_FILE_UNSUPPORTED_SAMPLE_RATE    , _T("input file unsupported sample rate") },     \
-    { ERROR_INPUT_FILE_UNSUPPORTED_CHANNEL_COUNT  , _T("input file unsupported channel count") },   \
-    { ERROR_INPUT_FILE_TOO_SMALL                  , _T("input file too small") },                   \
-    { ERROR_INVALID_CHECKSUM                      , _T("invalid checksum") },                       \
-    { ERROR_DECOMPRESSING_FRAME                   , _T("decompressing frame") },                    \
-    { ERROR_INITIALIZING_UNMAC                    , _T("initializing unmac") },                     \
-    { ERROR_INVALID_FUNCTION_PARAMETER            , _T("invalid function parameter") },             \
-    { ERROR_UNSUPPORTED_FILE_TYPE                 , _T("unsupported file type") },                  \
-    { ERROR_INSUFFICIENT_MEMORY                   , _T("insufficient memory") },                    \
-    { ERROR_LOADINGAPE_DLL                        , _T("loading MAC.dll") },                        \
-    { ERROR_LOADINGAPE_INFO_DLL                   , _T("loading MACinfo.dll") },                    \
-    { ERROR_LOADING_UNMAC_DLL                     , _T("loading UnMAC.dll") },                      \
-    { ERROR_USER_STOPPED_PROCESSING               , _T("user stopped processing") },                \
-    { ERROR_SKIPPED                               , _T("skipped") },                                \
-    { ERROR_BAD_PARAMETER                         , _T("bad parameter") },                          \
-    { ERROR_APE_COMPRESS_TOO_MUCH_DATA            , _T("APE compress too much data") },             \
-    { ERROR_UNDEFINED                             , _T("undefined") },
diff -Naur mac-sdk-4.66/Source/Shared/IO.h mac-sdk-4.66-gcc/Source/Shared/IO.h
--- mac-sdk-4.66/Source/Shared/IO.h	2019-03-02 19:31:11 +0000
+++ mac-sdk-4.66-gcc/Source/Shared/IO.h	1970-01-01 00:00:00 +0000
@@ -1,58 +0,0 @@
-#pragma once
-
-namespace APE
-{
-
-#define APE_FILE_BEGIN 0
-#define APE_FILE_CURRENT 1
-#define APE_FILE_END 2
-
-class CIO
-{   
-public:
-    // construction / destruction
-    CIO() 
-	{ 
-		m_nSeekPosition = 0;
-		m_nSeekMethod = APE_FILE_BEGIN;
-	}
-    virtual ~CIO() { };
-
-    // open / close
-    virtual int Open(const wchar_t * pName, bool bOpenReadOnly = false) = 0;
-    virtual int Close() = 0;
-    
-    // read / write
-    virtual int Read(void * pBuffer, unsigned int nBytesToRead, unsigned int * pBytesRead) = 0;
-    virtual int Write(const void * pBuffer, unsigned int nBytesToWrite, unsigned int * pBytesWritten) = 0;
-    
-    // seek
-	void SetSeekPosition(int64 nPosition)
-	{
-		m_nSeekPosition = nPosition;
-	}
-	void SetSeekMethod(unsigned int nMethod)
-	{
-		m_nSeekMethod = nMethod;
-	}
-    virtual int64 PerformSeek() = 0;
-    
-    // creation / destruction
-    virtual int Create(const wchar_t * pName) = 0;
-    virtual int Delete() = 0;
-
-    // other functions
-    virtual int SetEOF() = 0;
-
-    // attributes
-    virtual int64 GetPosition() = 0;
-    virtual int64 GetSize() = 0;
-    virtual int GetName(wchar_t * pBuffer) = 0;
-
-protected:
-
-	int64 m_nSeekPosition;
-	unsigned int m_nSeekMethod;
-};
-
-}
diff -Naur mac-sdk-4.66/Source/Shared/MACDll.h mac-sdk-4.66-gcc/Source/Shared/MACDll.h
--- mac-sdk-4.66/Source/Shared/MACDll.h	2019-03-02 19:31:11 +0000
+++ mac-sdk-4.66-gcc/Source/Shared/MACDll.h	1970-01-01 00:00:00 +0000
@@ -1,97 +0,0 @@
-/*****************************************************************************************
-Monkey's Audio MACDll.h (include for using MACDll.dll in your projects)
-Copyright (C) 2000-2011 by Matthew T. Ashland   All Rights Reserved.
-
-Overview:
-
-Basically all this dll does is wrap MACLib.lib, so browse through MACLib.h for documentation
-on how to use the interfaces.
-*****************************************************************************************/
-
-#pragma once
-
-/*****************************************************************************************
-Includes
-*****************************************************************************************/
-#include "All.h"
-#include "MACLib.h"
-
-/*****************************************************************************************
-Defines (implemented elsewhere)
-*****************************************************************************************/
-namespace APE
-{
-	struct ID3_TAG;
-}
-
-/*****************************************************************************************
-Helper functions
-*****************************************************************************************/
-extern "C"
-{
-    DLLEXPORT int __stdcall GetVersionNumber();
-#ifdef PLATFORM_WINDOWS
-    DLLEXPORT int __stdcall GetInterfaceCompatibility(int nVersion, BOOL bDisplayWarningsOnFailure = TRUE, HWND hwndParent = NULL);
-    DLLEXPORT int __stdcall ShowFileInfoDialog(const APE::str_ansi * pFilename, HWND hwndWindow);
-#endif
-    DLLEXPORT int __stdcall TagFileSimple(const APE::str_ansi * pFilename, const char * pArtist, const char * pAlbum, const char * pTitle, const char * pComment, const char * pGenre, const char * pYear, const char * pTrack, BOOL bClearFirst, BOOL bUseOldID3);
-	DLLEXPORT int __stdcall GetID3Tag(const APE::str_ansi * pFilename, APE::ID3_TAG * pID3Tag);
-    DLLEXPORT int __stdcall RemoveTag(const APE::str_ansi * pFilename);
-}
-
-typedef int (__stdcall * proc_GetVersionNumber)();
-#ifdef PLATFORM_WINDOWS
-typedef int (__stdcall * proc_GetInterfaceCompatibility)(int, BOOL, HWND);
-#endif
-
-/*****************************************************************************************
-IAPECompress wrapper(s)
-*****************************************************************************************/
-typedef void * APE_COMPRESS_HANDLE;
-
-typedef APE_COMPRESS_HANDLE (__stdcall * proc_APECompress_Create)(int *); 
-typedef void (__stdcall * proc_APECompress_Destroy)(APE_COMPRESS_HANDLE); 
-typedef int (__stdcall * proc_APECompress_Start)(APE_COMPRESS_HANDLE, const char *, const APE::WAVEFORMATEX *, int, int, const void *, int);
-typedef int (__stdcall * proc_APECompress_StartW)(APE_COMPRESS_HANDLE, const APE::str_utfn *, const APE::WAVEFORMATEX *, int, int, const void *, int);
-typedef int (__stdcall * proc_APECompress_AddData)(APE_COMPRESS_HANDLE, unsigned char *, int);
-typedef int (__stdcall * proc_APECompress_GetBufferBytesAvailable)(APE_COMPRESS_HANDLE);
-typedef unsigned char * (__stdcall * proc_APECompress_LockBuffer)(APE_COMPRESS_HANDLE, APE::intn *);
-typedef int (__stdcall * proc_APECompress_UnlockBuffer)(APE_COMPRESS_HANDLE, int, BOOL);
-typedef int (__stdcall * proc_APECompress_Finish)(APE_COMPRESS_HANDLE, unsigned char *, int, int);
-typedef int (__stdcall * proc_APECompress_Kill)(APE_COMPRESS_HANDLE);
-
-extern "C"
-{
-    DLLEXPORT APE_COMPRESS_HANDLE __stdcall c_APECompress_Create(int * pErrorCode = NULL);
-    DLLEXPORT void __stdcall c_APECompress_Destroy(APE_COMPRESS_HANDLE hAPECompress);
-    DLLEXPORT int __stdcall c_APECompress_Start(APE_COMPRESS_HANDLE hAPECompress, const char * pOutputFilename, const APE::WAVEFORMATEX * pwfeInput, int nMaxAudioBytes = MAX_AUDIO_BYTES_UNKNOWN, int nCompressionLevel = COMPRESSION_LEVEL_NORMAL, const void * pHeaderData = NULL, int nHeaderBytes = CREATE_WAV_HEADER_ON_DECOMPRESSION);
-    DLLEXPORT int __stdcall c_APECompress_StartW(APE_COMPRESS_HANDLE hAPECompress, const APE::str_utfn * pOutputFilename, const APE::WAVEFORMATEX * pwfeInput, int nMaxAudioBytes = MAX_AUDIO_BYTES_UNKNOWN, int nCompressionLevel = COMPRESSION_LEVEL_NORMAL, const void * pHeaderData = NULL, int nHeaderBytes = CREATE_WAV_HEADER_ON_DECOMPRESSION);
-    DLLEXPORT int __stdcall c_APECompress_AddData(APE_COMPRESS_HANDLE hAPECompress, unsigned char * pData, int nBytes);
-    DLLEXPORT int __stdcall c_APECompress_GetBufferBytesAvailable(APE_COMPRESS_HANDLE hAPECompress);
-    DLLEXPORT unsigned char * __stdcall c_APECompress_LockBuffer(APE_COMPRESS_HANDLE hAPECompress, APE::intn * pBytesAvailable);
-    DLLEXPORT    int __stdcall c_APECompress_UnlockBuffer(APE_COMPRESS_HANDLE hAPECompress, int nBytesAdded, BOOL bProcess = true);
-    DLLEXPORT    int __stdcall c_APECompress_Finish(APE_COMPRESS_HANDLE hAPECompress, unsigned char * pTerminatingData, int nTerminatingBytes, int nWAVTerminatingBytes);
-    DLLEXPORT    int __stdcall c_APECompress_Kill(APE_COMPRESS_HANDLE hAPECompress);
-}
-
-/*****************************************************************************************
-IAPEDecompress wrapper(s)
-*****************************************************************************************/
-typedef void * APE_DECOMPRESS_HANDLE;
-
-typedef APE_DECOMPRESS_HANDLE (__stdcall * proc_APEDecompress_Create)(const char *, int *); 
-typedef APE_DECOMPRESS_HANDLE (__stdcall * proc_APEDecompress_CreateW)(const char *, int *); 
-typedef void (__stdcall * proc_APEDecompress_Destroy)(APE_DECOMPRESS_HANDLE); 
-typedef int (__stdcall * proc_APEDecompress_GetData)(APE_DECOMPRESS_HANDLE, char *, APE::intn, APE::intn *);
-typedef int (__stdcall * proc_APEDecompress_Seek)(APE_DECOMPRESS_HANDLE, int); 
-typedef int (__stdcall * proc_APEDecompress_GetInfo)(APE_DECOMPRESS_HANDLE, APE::APE_DECOMPRESS_FIELDS, int, int);
-
-extern "C"
-{
-    DLLEXPORT APE_DECOMPRESS_HANDLE __stdcall c_APEDecompress_Create(const APE::str_ansi * pFilename, int * pErrorCode = NULL);
-    DLLEXPORT APE_DECOMPRESS_HANDLE __stdcall c_APEDecompress_CreateW(const APE::str_utfn * pFilename, int * pErrorCode = NULL);
-    DLLEXPORT void __stdcall c_APEDecompress_Destroy(APE_DECOMPRESS_HANDLE hAPEDecompress);
-    DLLEXPORT int __stdcall c_APEDecompress_GetData(APE_DECOMPRESS_HANDLE hAPEDecompress, char * pBuffer, APE::intn nBlocks, APE::intn * pBlocksRetrieved);
-    DLLEXPORT int __stdcall c_APEDecompress_Seek(APE_DECOMPRESS_HANDLE hAPEDecompress, int nBlockOffset);
-    DLLEXPORT int __stdcall c_APEDecompress_GetInfo(APE_DECOMPRESS_HANDLE hAPEDecompress, APE::APE_DECOMPRESS_FIELDS Field, int nParam1 = 0, int nParam2 = 0);
-}
diff -Naur mac-sdk-4.66/Source/Shared/NoWindows.h mac-sdk-4.66-gcc/Source/Shared/NoWindows.h
--- mac-sdk-4.66/Source/Shared/NoWindows.h	2019-03-02 19:31:11 +0000
+++ mac-sdk-4.66-gcc/Source/Shared/NoWindows.h	1970-01-01 00:00:00 +0000
@@ -1,53 +0,0 @@
-#pragma once
-
-#if !defined(PLATFORM_WINDOWS)
-
-// we treat bool as a global type, so don't declare it in the namespace
-#ifdef PLATFORM_APPLE
-	typedef signed char BOOL;  // this is the way it's defined in Obj-C
-#else
-	typedef unsigned char BOOL; // this is the way it's defined in X11
-#endif
-
-namespace APE
-{
-
-#define __forceinline inline
-#define __stdcall
-
-#define NEAR
-#define FAR
-
-typedef unsigned long       DWORD;
-typedef unsigned char       BYTE;
-typedef unsigned short      WORD;
-typedef float               FLOAT;
-typedef void *              HANDLE;
-typedef unsigned int        UINT;
-typedef const char *        LPCSTR;
-typedef char *              LPSTR;
-typedef long                LRESULT;
-
-#define ZeroMemory(POINTER, BYTES) memset(POINTER, 0, BYTES);
-
-#define TRUE 1
-#define FALSE 0
-
-#define CALLBACK
-
-#define _T(x) L ## x
-
-#define _strnicmp strncasecmp
-#define _wtoi(x) wcstol(x, NULL, 10)
-#define _tcscat wcscat
-#define _totlower towlower
-#define _totupper towupper
-
-#define MAX_PATH    4096
-
-#include <wctype.h>
-#include <string.h>
-
-}
-
-#endif // #ifndef _WIN32
diff -Naur mac-sdk-4.66/Source/Shared/SmartPtr.h mac-sdk-4.66-gcc/Source/Shared/SmartPtr.h
--- mac-sdk-4.66/Source/Shared/SmartPtr.h	2019-03-02 19:31:11 +0000
+++ mac-sdk-4.66-gcc/Source/Shared/SmartPtr.h	1970-01-01 00:00:00 +0000
@@ -1,91 +0,0 @@
-#pragma once
-
-namespace APE
-{
-
-// disable the operator -> on UDT warning
-#ifdef _MSC_VER
-    #pragma warning(push)
-    #pragma warning(disable : 4284)
-#endif
-
-/*************************************************************************************************
-CSmartPtr - a simple smart pointer class that can automatically initialize and free memory
-    note: (doesn't do garbage collection / reference counting because of the many pitfalls)
-*************************************************************************************************/
-template <class TYPE> class CSmartPtr
-{
-public:
-    TYPE * m_pObject;
-    bool m_bArray;
-    bool m_bDelete;
-
-    CSmartPtr()
-    {
-        m_bDelete = true;
-        m_pObject = NULL;
-    }
-    CSmartPtr(TYPE * a_pObject, bool a_bArray = false, bool a_bDelete = true)
-    {
-        m_bDelete = true;
-        m_pObject = NULL;
-        Assign(a_pObject, a_bArray, a_bDelete);
-    }
-
-    ~CSmartPtr()
-    {
-        Delete();
-    }
-
-    void Assign(TYPE * a_pObject, bool a_bArray = false, bool a_bDelete = true)
-    {
-        Delete();
-
-        m_bDelete = a_bDelete;
-        m_bArray = a_bArray;
-        m_pObject = a_pObject;
-    }
-
-    void Delete()
-    {
-        if (m_bDelete && m_pObject)
-        {
-            if (m_bArray)
-                delete [] m_pObject;
-            else
-                delete m_pObject;
-
-            m_pObject = NULL;
-        }
-    }
-
-    void SetDelete(const bool a_bDelete)
-    {
-        m_bDelete = a_bDelete;
-    }
-
-    __forceinline TYPE * GetPtr() const
-    {
-        return m_pObject;
-    }
-
-    __forceinline operator TYPE * () const
-    {
-        return m_pObject;
-    }
-
-    __forceinline TYPE * operator ->() const
-    {
-        return m_pObject;
-    }
-
-    // declare assignment, but don't implement (compiler error if we try to use)
-    // that way we can't carelessly mix smart pointers and regular pointers
-    __forceinline void * operator =(void *) const;
-};
-
-#ifdef _MSC_VER
-    #pragma warning(pop)
-#endif
-
-}
diff -Naur mac-sdk-4.66/Source/Shared/StdLibFileIO.cpp mac-sdk-4.66-gcc/Source/Shared/StdLibFileIO.cpp
--- mac-sdk-4.66/Source/Shared/StdLibFileIO.cpp	2019-03-02 19:31:11 +0000
+++ mac-sdk-4.66-gcc/Source/Shared/StdLibFileIO.cpp	2019-04-14 13:20:10 +0000
@@ -218,9 +218,7 @@
 {
 #ifdef PLATFORM_ANDROID
     return ftell(m_pFile);
-#elif defined(PLATFORM_LINUX)
-	return ftello64(m_pFile);
-#elif PLATFORM_APPLE
+#elif !defined(PLATFORM_WINDOWS)
     return ftello(m_pFile);
 #else
 	return _ftelli64(m_pFile);
diff -Naur mac-sdk-4.66/Source/Shared/WindowsEnvironment.h mac-sdk-4.66-gcc/Source/Shared/WindowsEnvironment.h
--- mac-sdk-4.66/Source/Shared/WindowsEnvironment.h	2019-03-02 19:31:11 +0000
+++ mac-sdk-4.66-gcc/Source/Shared/WindowsEnvironment.h	1970-01-01 00:00:00 +0000
@@ -1,27 +0,0 @@
-#pragma once
-
-/*****************************************************************************************
-Windows version
-*****************************************************************************************/
-#ifndef WINVER
-    #define WINVER         0x0501
-    #define _WIN32_WINNT   0x0501
-    #define _WIN32_WINDOWS 0x0501
-    #define _WIN32_IE      0x0501
-#endif
-
-/*****************************************************************************************
-Unicode
-*****************************************************************************************/
-#ifndef UNICODE
-    #define UNICODE
-#endif
-#ifndef _UNICODE
-    #define _UNICODE
-#endif
-
-/*****************************************************************************************
-Visual Studio defines
-*****************************************************************************************/
-#define _CRT_NON_CONFORMING_SWPRINTFS
-#define _AFX_NO_MFC_CONTROLS_IN_DIALOGS
\ No newline at end of file
diff -Naur mac-sdk-4.66/configure mac-sdk-4.66-gcc/configure
--- mac-sdk-4.66/configure	1970-01-01 00:00:00 +0000
+++ mac-sdk-4.66-gcc/configure	2019-03-02 17:34:04 +0000
@@ -0,0 +1 @@
+#!/bin/sh
